[{"path":[]},{"path":"https://andrewallenbruce.github.io/fuimus/CODE_OF_CONDUCT.html","id":"our-pledge","dir":"","previous_headings":"","what":"Our Pledge","title":"Contributor Covenant Code of Conduct","text":"members, contributors, leaders pledge make participation community harassment-free experience everyone, regardless age, body size, visible invisible disability, ethnicity, sex characteristics, gender identity expression, level experience, education, socio-economic status, nationality, personal appearance, race, caste, color, religion, sexual identity orientation. pledge act interact ways contribute open, welcoming, diverse, inclusive, healthy community.","code":""},{"path":"https://andrewallenbruce.github.io/fuimus/CODE_OF_CONDUCT.html","id":"our-standards","dir":"","previous_headings":"","what":"Our Standards","title":"Contributor Covenant Code of Conduct","text":"Examples behavior contributes positive environment community include: Demonstrating empathy kindness toward people respectful differing opinions, viewpoints, experiences Giving gracefully accepting constructive feedback Accepting responsibility apologizing affected mistakes, learning experience Focusing best just us individuals, overall community Examples unacceptable behavior include: use sexualized language imagery, sexual attention advances kind Trolling, insulting derogatory comments, personal political attacks Public private harassment Publishing others‚Äô private information, physical email address, without explicit permission conduct reasonably considered inappropriate professional setting","code":""},{"path":"https://andrewallenbruce.github.io/fuimus/CODE_OF_CONDUCT.html","id":"enforcement-responsibilities","dir":"","previous_headings":"","what":"Enforcement Responsibilities","title":"Contributor Covenant Code of Conduct","text":"Community leaders responsible clarifying enforcing standards acceptable behavior take appropriate fair corrective action response behavior deem inappropriate, threatening, offensive, harmful. Community leaders right responsibility remove, edit, reject comments, commits, code, wiki edits, issues, contributions aligned Code Conduct, communicate reasons moderation decisions appropriate.","code":""},{"path":"https://andrewallenbruce.github.io/fuimus/CODE_OF_CONDUCT.html","id":"scope","dir":"","previous_headings":"","what":"Scope","title":"Contributor Covenant Code of Conduct","text":"Code Conduct applies within community spaces, also applies individual officially representing community public spaces. Examples representing community include using official e-mail address, posting via official social media account, acting appointed representative online offline event.","code":""},{"path":"https://andrewallenbruce.github.io/fuimus/CODE_OF_CONDUCT.html","id":"enforcement","dir":"","previous_headings":"","what":"Enforcement","title":"Contributor Covenant Code of Conduct","text":"Instances abusive, harassing, otherwise unacceptable behavior may reported community leaders responsible enforcement andrew.bruce@northstarrevenueintegrity.com. complaints reviewed investigated promptly fairly. community leaders obligated respect privacy security reporter incident.","code":""},{"path":"https://andrewallenbruce.github.io/fuimus/CODE_OF_CONDUCT.html","id":"enforcement-guidelines","dir":"","previous_headings":"","what":"Enforcement Guidelines","title":"Contributor Covenant Code of Conduct","text":"Community leaders follow Community Impact Guidelines determining consequences action deem violation Code Conduct:","code":""},{"path":"https://andrewallenbruce.github.io/fuimus/CODE_OF_CONDUCT.html","id":"id_1-correction","dir":"","previous_headings":"Enforcement Guidelines","what":"1. Correction","title":"Contributor Covenant Code of Conduct","text":"Community Impact: Use inappropriate language behavior deemed unprofessional unwelcome community. Consequence: private, written warning community leaders, providing clarity around nature violation explanation behavior inappropriate. public apology may requested.","code":""},{"path":"https://andrewallenbruce.github.io/fuimus/CODE_OF_CONDUCT.html","id":"id_2-warning","dir":"","previous_headings":"Enforcement Guidelines","what":"2. Warning","title":"Contributor Covenant Code of Conduct","text":"Community Impact: violation single incident series actions. Consequence: warning consequences continued behavior. interaction people involved, including unsolicited interaction enforcing Code Conduct, specified period time. includes avoiding interactions community spaces well external channels like social media. Violating terms may lead temporary permanent ban.","code":""},{"path":"https://andrewallenbruce.github.io/fuimus/CODE_OF_CONDUCT.html","id":"id_3-temporary-ban","dir":"","previous_headings":"Enforcement Guidelines","what":"3. Temporary Ban","title":"Contributor Covenant Code of Conduct","text":"Community Impact: serious violation community standards, including sustained inappropriate behavior. Consequence: temporary ban sort interaction public communication community specified period time. public private interaction people involved, including unsolicited interaction enforcing Code Conduct, allowed period. Violating terms may lead permanent ban.","code":""},{"path":"https://andrewallenbruce.github.io/fuimus/CODE_OF_CONDUCT.html","id":"id_4-permanent-ban","dir":"","previous_headings":"Enforcement Guidelines","what":"4. Permanent Ban","title":"Contributor Covenant Code of Conduct","text":"Community Impact: Demonstrating pattern violation community standards, including sustained inappropriate behavior, harassment individual, aggression toward disparagement classes individuals. Consequence: permanent ban sort public interaction within community.","code":""},{"path":"https://andrewallenbruce.github.io/fuimus/CODE_OF_CONDUCT.html","id":"attribution","dir":"","previous_headings":"","what":"Attribution","title":"Contributor Covenant Code of Conduct","text":"Code Conduct adapted Contributor Covenant, version 2.1, available https://www.contributor-covenant.org/version/2/1/code_of_conduct.html. Community Impact Guidelines inspired [Mozilla‚Äôs code conduct enforcement ladder][https://github.com/mozilla/inclusion]. answers common questions code conduct, see FAQ https://www.contributor-covenant.org/faq. Translations available https://www.contributor-covenant.org/translations.","code":""},{"path":"https://andrewallenbruce.github.io/fuimus/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2024 fuimus authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (‚ÄúSoftware‚Äù), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED ‚Äú‚Äù, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://andrewallenbruce.github.io/fuimus/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Andrew Bruce. Author, maintainer, copyright holder.","code":""},{"path":"https://andrewallenbruce.github.io/fuimus/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Bruce (2024). fuimus: Functions . R package version 0.0.1,  https://github.com/andrewallenbruce/fuimus, https://andrewallenbruce.github.io/fuimus/.","code":"@Manual{,   title = {fuimus: Functions That Have Been},   author = {Andrew Bruce},   year = {2024},   note = {R package version 0.0.1,  https://github.com/andrewallenbruce/fuimus},   url = {https://andrewallenbruce.github.io/fuimus/}, }"},{"path":"https://andrewallenbruce.github.io/fuimus/index.html","id":"fuimus-","dir":"","previous_headings":"","what":"Functions That Have Been","title":"Functions That Have Been","text":"/Ààfu..mus/, [Ààfu…™m äsÃ†] Literally, ‚Äò‚Äô Latin. Often interpreted ‚Äòendured‚Äô ‚Äòalways ‚Äô, proclaiming long history user. family motto Lowlands Scottish Clan Bruce).","code":""},{"path":"https://andrewallenbruce.github.io/fuimus/index.html","id":"package-installation","dir":"","previous_headings":"","what":"üì¶ Installation","title":"Functions That Have Been","text":"can install fuimus GitHub :","code":"# install.packages(\"pak\") pak::pak(\"andrewallenbruce/fuimus\")"},{"path":"https://andrewallenbruce.github.io/fuimus/index.html","id":"balance_scale-code-of-conduct","dir":"","previous_headings":"","what":"‚öñÔ∏è Code of Conduct","title":"Functions That Have Been","text":"Please note fuimus project released Contributor Code Conduct. contributing project, agree abide terms.","code":""},{"path":"https://andrewallenbruce.github.io/fuimus/index.html","id":"classical_building-governance","dir":"","previous_headings":"","what":"üèõÔ∏è Governance","title":"Functions That Have Been","text":"project primarily maintained Andrew Bruce. authors may occasionally assist duties.","code":""},{"path":"https://andrewallenbruce.github.io/fuimus/reference/add_ifelse.html","id":null,"dir":"Reference","previous_headings":"","what":"Search in data frame column if search term is not NULL ‚Äî add_ifelse","title":"Search in data frame column if search term is not NULL ‚Äî add_ifelse","text":"Search data frame column search term NULL","code":""},{"path":"https://andrewallenbruce.github.io/fuimus/reference/add_ifelse.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Search in data frame column if search term is not NULL ‚Äî add_ifelse","text":"","code":"add_ifelse(x, df, dfcol, by)"},{"path":"https://andrewallenbruce.github.io/fuimus/reference/add_ifelse.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Search in data frame column if search term is not NULL ‚Äî add_ifelse","text":"x <character> <symbol> specifying search term df <data.frame> <tibble> dfcol <character> <symbol> specifying column search <character> <symbol> specifying column nest ","code":""},{"path":"https://andrewallenbruce.github.io/fuimus/reference/add_ifelse.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Search in data frame column if search term is not NULL ‚Äî add_ifelse","text":"<data.frame> <tibble>","code":""},{"path":"https://andrewallenbruce.github.io/fuimus/reference/add_ifelse.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Search in data frame column if search term is not NULL ‚Äî add_ifelse","text":"","code":"if (FALSE) { # interactive()  df <- northstar::get_mue_edits()  add_ifelse(x = \"Practitioner\",            df = df,            dfcol = df$mue_service_type,            by = mue_service_type) }"},{"path":"https://andrewallenbruce.github.io/fuimus/reference/age_days.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate Number of Days Between Two Dates ‚Äî age_days","title":"Calculate Number of Days Between Two Dates ‚Äî age_days","text":"Calculate Number Days Two Dates","code":""},{"path":"https://andrewallenbruce.github.io/fuimus/reference/age_days.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate Number of Days Between Two Dates ‚Äî age_days","text":"","code":"age_days(df, start, end, colname = \"age\")"},{"path":"https://andrewallenbruce.github.io/fuimus/reference/age_days.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate Number of Days Between Two Dates ‚Äî age_days","text":"df <data.frame> containing date columns start column containing date(s) prior end_date column end column containing date(s) start_date column colname desired column name output; default \"age\"","code":""},{"path":"https://andrewallenbruce.github.io/fuimus/reference/age_days.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate Number of Days Between Two Dates ‚Äî age_days","text":"tibble named column containing calculated number days.","code":""},{"path":"https://andrewallenbruce.github.io/fuimus/reference/age_days.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Calculate Number of Days Between Two Dates ‚Äî age_days","text":"calculation includes end date sum (see example)","code":""},{"path":"https://andrewallenbruce.github.io/fuimus/reference/age_days.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate Number of Days Between Two Dates ‚Äî age_days","text":"","code":"date_ex <- dplyr::tibble(    x = seq.Date(    as.Date(\"2021-01-01\"),    by = \"month\",    length.out = 3),    y = seq.Date(    as.Date(\"2022-01-01\"),    by = \"month\",    length.out = 3    )  )  age_days(df    = date_ex,          start = x,          end   = y) #> # A tibble: 3 √ó 3 #>   x          y            age #>   <date>     <date>     <dbl> #> 1 2021-01-01 2022-01-01   366 #> 2 2021-02-01 2022-02-01   366 #> 3 2021-03-01 2022-03-01   366  date_ex |> age_days(x, y, \"days_between_x_y\") #> # A tibble: 3 √ó 3 #>   x          y          days_between_x_y #>   <date>     <date>                <dbl> #> 1 2021-01-01 2022-01-01              366 #> 2 2021-02-01 2022-02-01              366 #> 3 2021-03-01 2022-03-01              366  date_ex |> age_days(start = x, end = lubridate::today(), colname = \"days_since_x\") #> # A tibble: 3 √ó 3 #>   x          y          days_since_x #>   <date>     <date>            <dbl> #> 1 2021-01-01 2022-01-01         1266 #> 2 2021-02-01 2022-02-01         1235 #> 3 2021-03-01 2022-03-01         1207  date_ex |> age_days(x, y, \"days_between_x_y\") |> age_days(x, lubridate::today(), \"days_since_x\") |> age_days(y, lubridate::today(), colname = \"days_since_y\") #> # A tibble: 3 √ó 5 #>   x          y          days_between_x_y days_since_x days_since_y #>   <date>     <date>                <dbl>        <dbl>        <dbl> #> 1 2021-01-01 2022-01-01              366         1266          901 #> 2 2021-02-01 2022-02-01              366         1235          870 #> 3 2021-03-01 2022-03-01              366         1207          842"},{"path":"https://andrewallenbruce.github.io/fuimus/reference/change.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate Lagged Metrics ‚Äî change","title":"Calculate Lagged Metrics ‚Äî change","text":"Calculate Lagged Metrics","code":""},{"path":"https://andrewallenbruce.github.io/fuimus/reference/change.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate Lagged Metrics ‚Äî change","text":"","code":"change(df, cols, csm = NULL)"},{"path":"https://andrewallenbruce.github.io/fuimus/reference/change.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate Lagged Metrics ‚Äî change","text":"df data frame cols numeric columns calculate absolute/relative change & rate return csm numeric cols calculate cumulative sum ","code":""},{"path":"https://andrewallenbruce.github.io/fuimus/reference/change.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate Lagged Metrics ‚Äî change","text":"","code":"fuimus:::provider_data(2020:2025) |>   dplyr::group_by(group) |>   change(net_payment, csm = c(\"payment\", \"_chg\")) #> # A tibble: 12 √ó 8 #>     year group net_payment net_payment_chg net_payment_pct net_payment_ror #>    <int> <chr>       <int>           <int>           <dbl>           <dbl> #>  1  2020 A           15292               0          0                1     #>  2  2021 A           15526             234          0.0153           1.02  #>  3  2022 A           16603            1077          0.0694           1.07  #>  4  2023 A           10484           -6119         -0.369            0.631 #>  5  2024 A           12606            2122          0.202            1.20  #>  6  2025 A           11475           -1131         -0.0897           0.910 #>  7  2020 B           18165               0          0                1     #>  8  2021 B           12244           -5921         -0.326            0.674 #>  9  2022 B           14612            2368          0.193            1.19  #> 10  2023 B           19982            5370          0.368            1.37  #> 11  2024 B           14172           -5810         -0.291            0.709 #> 12  2025 B           19089            4917          0.347            1.35  #> # ‚Ñπ 2 more variables: net_payment_csm <int>, net_payment_chg_csm <int>"},{"path":"https://andrewallenbruce.github.io/fuimus/reference/change_lagged.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate lagged values by column ‚Äî change_lagged","title":"Calculate lagged values by column ‚Äî change_lagged","text":"Calculate lagged values column","code":""},{"path":"https://andrewallenbruce.github.io/fuimus/reference/change_lagged.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate lagged values by column ‚Äî change_lagged","text":"","code":"change_lagged(df, col, by = NULL)"},{"path":"https://andrewallenbruce.github.io/fuimus/reference/change_lagged.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate lagged values by column ‚Äî change_lagged","text":"df data frame col column numeric values calculate lag column calculate lag ","code":""},{"path":"https://andrewallenbruce.github.io/fuimus/reference/change_lagged.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate lagged values by column ‚Äî change_lagged","text":"","code":"fuimus:::provider_data(2020:2025) |>   dplyr::group_by(group) |>   change_lagged(net_payment, year) #> # A tibble: 12 √ó 5 #> # Groups:   group [2] #>     year group net_payment net_payment_chg net_payment_pct #>    <int> <chr>       <int>           <int>           <dbl> #>  1  2020 A           12614              NA        NA       #>  2  2021 A           13371             757         0.0600  #>  3  2022 A           11980           -1391        -0.104   #>  4  2023 A           12046              66         0.00551 #>  5  2024 A           13331            1285         0.107   #>  6  2025 A           18943            5612         0.421   #>  7  2020 B           19285              NA        NA       #>  8  2021 B           16293           -2992        -0.155   #>  9  2022 B           11022           -5271        -0.324   #> 10  2023 B           11289             267         0.0242  #> 11  2024 B           19121            7832         0.694   #> 12  2025 B           14275           -4846        -0.253"},{"path":"https://andrewallenbruce.github.io/fuimus/reference/chg_abs.html","id":null,"dir":"Reference","previous_headings":"","what":"Lagged absolute change ‚Äî chg_abs","title":"Lagged absolute change ‚Äî chg_abs","text":"Lagged absolute change","code":""},{"path":"https://andrewallenbruce.github.io/fuimus/reference/chg_abs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Lagged absolute change ‚Äî chg_abs","text":"","code":"chg_abs(x, n = 1L, fill_na = 0L)"},{"path":"https://andrewallenbruce.github.io/fuimus/reference/chg_abs.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Lagged absolute change ‚Äî chg_abs","text":"x numeric vector n values offset fill_na fill value NAs; default 0","code":""},{"path":"https://andrewallenbruce.github.io/fuimus/reference/chg_abs.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Lagged absolute change ‚Äî chg_abs","text":"","code":"fuimus:::provider_data(2020:2025) |>   dplyr::mutate(change = chg_abs(net_payment),   .by = group) #> # A tibble: 12 √ó 4 #>     year group net_payment change #>    <int> <chr>       <int>  <int> #>  1  2020 A           12069      0 #>  2  2021 A           11920   -149 #>  3  2022 A           14274   2354 #>  4  2023 A           16829   2555 #>  5  2024 A           14928  -1901 #>  6  2025 A           11560  -3368 #>  7  2020 B           14590      0 #>  8  2021 B           15617   1027 #>  9  2022 B           16308    691 #> 10  2023 B           12783  -3525 #> 11  2024 B           12923    140 #> 12  2025 B           11874  -1049"},{"path":"https://andrewallenbruce.github.io/fuimus/reference/chg_pct.html","id":null,"dir":"Reference","previous_headings":"","what":"Lagged percentage change ‚Äî chg_pct","title":"Lagged percentage change ‚Äî chg_pct","text":"Lagged percentage change","code":""},{"path":"https://andrewallenbruce.github.io/fuimus/reference/chg_pct.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Lagged percentage change ‚Äî chg_pct","text":"","code":"chg_pct(x, n = 1L, fill_na = 0L)"},{"path":"https://andrewallenbruce.github.io/fuimus/reference/chg_pct.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Lagged percentage change ‚Äî chg_pct","text":"x numeric vector n values offset fill_na fill value NAs; default 0","code":""},{"path":"https://andrewallenbruce.github.io/fuimus/reference/chg_pct.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Lagged percentage change ‚Äî chg_pct","text":"","code":"fuimus:::provider_data(2020:2025) |>   dplyr::mutate(change = chg_pct(net_payment),   .by = group) #> # A tibble: 12 √ó 4 #>     year group net_payment change #>    <int> <chr>       <int>  <dbl> #>  1  2020 A           17963  0     #>  2  2021 A           11839 -0.341 #>  3  2022 A           19177  0.620 #>  4  2023 A           11314 -0.410 #>  5  2024 A           18321  0.619 #>  6  2025 A           13926 -0.240 #>  7  2020 B           17017  0     #>  8  2021 B           18834  0.107 #>  9  2022 B           11829 -0.372 #> 10  2023 B           16595  0.403 #> 11  2024 B           10745 -0.353 #> 12  2025 B           12624  0.175"},{"path":"https://andrewallenbruce.github.io/fuimus/reference/clean_number.html","id":null,"dir":"Reference","previous_headings":"","what":"Clean character vector of numbers ‚Äî clean_number","title":"Clean character vector of numbers ‚Äî clean_number","text":"Clean character vector numbers","code":""},{"path":"https://andrewallenbruce.github.io/fuimus/reference/clean_number.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Clean character vector of numbers ‚Äî clean_number","text":"","code":"clean_number(x)"},{"path":"https://andrewallenbruce.github.io/fuimus/reference/clean_number.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Clean character vector of numbers ‚Äî clean_number","text":"x <chr> vector numbers","code":""},{"path":"https://andrewallenbruce.github.io/fuimus/reference/clean_number.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Clean character vector of numbers ‚Äî clean_number","text":"<dbl> vector numbers","code":""},{"path":"https://andrewallenbruce.github.io/fuimus/reference/clean_number.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Clean character vector of numbers ‚Äî clean_number","text":"","code":"clean_number(c(\"20%\", \"21,125,458\", \"$123\")) #> [1]        0.2 21125458.0      123.0"},{"path":"https://andrewallenbruce.github.io/fuimus/reference/collapser.html","id":null,"dir":"Reference","previous_headings":"","what":"Wrapper for paste0() that collapses result ‚Äî collapser","title":"Wrapper for paste0() that collapses result ‚Äî collapser","text":"Wrapper paste0() collapses result","code":""},{"path":"https://andrewallenbruce.github.io/fuimus/reference/collapser.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Wrapper for paste0() that collapses result ‚Äî collapser","text":"","code":"collapser(x)"},{"path":"https://andrewallenbruce.github.io/fuimus/reference/collapser.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Wrapper for paste0() that collapses result ‚Äî collapser","text":"x split <chr> vector","code":""},{"path":"https://andrewallenbruce.github.io/fuimus/reference/collapser.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Wrapper for paste0() that collapses result ‚Äî collapser","text":"collapsed <chr> string","code":""},{"path":"https://andrewallenbruce.github.io/fuimus/reference/collapser.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Wrapper for paste0() that collapses result ‚Äî collapser","text":"","code":"collapser(c(\"X\", \"Y\", \"Z\")) #> [1] \"XYZ\""},{"path":"https://andrewallenbruce.github.io/fuimus/reference/combine.html","id":null,"dir":"Reference","previous_headings":"","what":"Combine multiple columns into one ‚Äî combine","title":"Combine multiple columns into one ‚Äî combine","text":"Combine multiple columns one","code":""},{"path":"https://andrewallenbruce.github.io/fuimus/reference/combine.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Combine multiple columns into one ‚Äî combine","text":"","code":"combine(df, name = combined, columns, sep = \"-\")"},{"path":"https://andrewallenbruce.github.io/fuimus/reference/combine.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Combine multiple columns into one ‚Äî combine","text":"df <data.frame> <tibble> name new column name, unquoted, default combined columns <chr> vector columns combine sep separator combined row data, default \"-\"","code":""},{"path":"https://andrewallenbruce.github.io/fuimus/reference/combine.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Combine multiple columns into one ‚Äî combine","text":"<data.frame> <tibble> combined columns","code":""},{"path":"https://andrewallenbruce.github.io/fuimus/reference/combine.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Combine multiple columns into one ‚Äî combine","text":"","code":"fuimus:::forager_data()[-5] |>   combine(name = id_payer,   columns = c('claim_id', 'payer')) #> # A tibble: 10 √ó 3 #>    id_payer    ins_class balance    #>    <chr>       <chr>     <variable> #>  1 01-BCBS     Secondary 100.03920  #>  2 02-Humana   Secondary 171.15927  #>  3 03-Anthem   Secondary 129.91113  #>  4 04-Medicare Primary   114.22880  #>  5 05-Medicaid Primary   246.59990  #>  6 06-Medicaid Primary    52.23827  #>  7 07-Anthem   Secondary  26.96327  #>  8 08-BCBS     Primary   137.35057  #>  9 09-Humana   Primary   253.50430  #> 10 10-Medicaid Primary   116.50190"},{"path":"https://andrewallenbruce.github.io/fuimus/reference/count_days.html","id":null,"dir":"Reference","previous_headings":"","what":"Count days between two dates ‚Äî count_days","title":"Count days between two dates ‚Äî count_days","text":"Count days two dates","code":""},{"path":"https://andrewallenbruce.github.io/fuimus/reference/count_days.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Count days between two dates ‚Äî count_days","text":"","code":"count_days(df, start, end, name)"},{"path":"https://andrewallenbruce.github.io/fuimus/reference/count_days.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Count days between two dates ‚Äî count_days","text":"df <data.frame> <tibble> start <sym> bare date column name end <sym> bare date column name name <sym> bare name days output column","code":""},{"path":"https://andrewallenbruce.github.io/fuimus/reference/count_days.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Count days between two dates ‚Äî count_days","text":"<data.frame> <tibble>","code":""},{"path":"https://andrewallenbruce.github.io/fuimus/reference/count_days.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Count days between two dates ‚Äî count_days","text":"","code":"dplyr::tibble(dos    = as.Date(c(\"2021-04-18\", \"2021-11-18\", \"2022-02-18\")),               signed = as.Date(\"2022-02-18\")) |>               count_days(               start  = dos,               end    = signed,               lag) #> # A tibble: 3 √ó 3 #>   dos        signed       lag #>   <date>     <date>     <int> #> 1 2021-04-18 2022-02-18   306 #> 2 2021-11-18 2022-02-18    92 #> 3 2022-02-18 2022-02-18     0"},{"path":"https://andrewallenbruce.github.io/fuimus/reference/count_missing.html","id":null,"dir":"Reference","previous_headings":"","what":"Count missing values ‚Äî count_missing","title":"Count missing values ‚Äî count_missing","text":"Count missing values","code":""},{"path":"https://andrewallenbruce.github.io/fuimus/reference/count_missing.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Count missing values ‚Äî count_missing","text":"","code":"count_missing(df, group_vars, x_var)"},{"path":"https://andrewallenbruce.github.io/fuimus/reference/count_missing.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Count missing values ‚Äî count_missing","text":"df <data.frame> <tibble> group_vars <character> <symbol> vector variables group x_var <character> <symbol>  vector variable count missing values ","code":""},{"path":"https://andrewallenbruce.github.io/fuimus/reference/count_missing.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Count missing values ‚Äî count_missing","text":"<data.frame> <tibble> count missing values","code":""},{"path":"https://andrewallenbruce.github.io/fuimus/reference/count_missing.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Count missing values ‚Äî count_missing","text":"","code":"dplyr::tibble(x = 1:10,               y = 1:10,               z = letters[1:10]) |>               count_missing(z, x) #> # A tibble: 10 √ó 2 #>    z     n_miss #>    <chr>  <int> #>  1 a          0 #>  2 b          0 #>  3 c          0 #>  4 d          0 #>  5 e          0 #>  6 f          0 #>  7 g          0 #>  8 h          0 #>  9 i          0 #> 10 j          0"},{"path":"https://andrewallenbruce.github.io/fuimus/reference/count_prop.html","id":null,"dir":"Reference","previous_headings":"","what":"Count and calculate proportion of each group ‚Äî count_prop","title":"Count and calculate proportion of each group ‚Äî count_prop","text":"Count calculate proportion group","code":""},{"path":"https://andrewallenbruce.github.io/fuimus/reference/count_prop.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Count and calculate proportion of each group ‚Äî count_prop","text":"","code":"count_prop(df, var, sort = FALSE, na.rm = FALSE)"},{"path":"https://andrewallenbruce.github.io/fuimus/reference/count_prop.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Count and calculate proportion of each group ‚Äî count_prop","text":"df <data.frame> <tibble> var <character> <symbol> specifying column count sort <logical> indicating whether sort output frequency, default FALSE na.rm <logical> indicating whether remove missing values count, default FALSE","code":""},{"path":"https://andrewallenbruce.github.io/fuimus/reference/count_prop.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Count and calculate proportion of each group ‚Äî count_prop","text":"","code":"fuimus:::forager_data() |>   count_prop(payer, sort = TRUE) #> # A tibble: 5 √ó 3 #>   payer       n  prop #>   <chr>   <int> <dbl> #> 1 BCBS        3   0.3 #> 2 Cigna       3   0.3 #> 3 Humana      2   0.2 #> 4 Anthem      1   0.1 #> 5 Centene     1   0.1"},{"path":"https://andrewallenbruce.github.io/fuimus/reference/count_prop_multi.html","id":null,"dir":"Reference","previous_headings":"","what":"Count and calculate proportion of each group ‚Äî count_prop_multi","title":"Count and calculate proportion of each group ‚Äî count_prop_multi","text":"Count calculate proportion group","code":""},{"path":"https://andrewallenbruce.github.io/fuimus/reference/count_prop_multi.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Count and calculate proportion of each group ‚Äî count_prop_multi","text":"","code":"count_prop_multi(df, rows, cols, sort = FALSE, na.rm = FALSE)"},{"path":"https://andrewallenbruce.github.io/fuimus/reference/count_prop_multi.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Count and calculate proportion of each group ‚Äî count_prop_multi","text":"df <data.frame> <tibble> rows <character> <symbol> specifying rows count cols <character> <symbol> specifying columns count sort <logical> indicating whether sort output frequency, default FALSE na.rm <logical> indicating whether remove missing values count, default FALSE","code":""},{"path":"https://andrewallenbruce.github.io/fuimus/reference/count_prop_multi.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Count and calculate proportion of each group ‚Äî count_prop_multi","text":"","code":"fuimus:::forager_data(10) |>   count_prop_multi(   c(ins_class),   payer,   sort = TRUE) #> # A tibble: 8 √ó 4 #>   ins_class payer            n  prop #>   <chr>     <chr>        <int> <dbl> #> 1 Primary   Anthem           2   0.2 #> 2 Primary   UnitedHealth     2   0.2 #> 3 Primary   BCBS             1   0.1 #> 4 Primary   Medicaid         1   0.1 #> 5 Secondary Centene          1   0.1 #> 6 Secondary Cigna            1   0.1 #> 7 Secondary Medicaid         1   0.1 #> 8 Secondary Medicare         1   0.1"},{"path":"https://andrewallenbruce.github.io/fuimus/reference/count_wide.html","id":null,"dir":"Reference","previous_headings":"","what":"Count rows and columns and pivot to wide format ‚Äî count_wide","title":"Count rows and columns and pivot to wide format ‚Äî count_wide","text":"Count rows columns pivot wide format","code":""},{"path":"https://andrewallenbruce.github.io/fuimus/reference/count_wide.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Count rows and columns and pivot to wide format ‚Äî count_wide","text":"","code":"count_wide(df, rows, cols)"},{"path":"https://andrewallenbruce.github.io/fuimus/reference/count_wide.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Count rows and columns and pivot to wide format ‚Äî count_wide","text":"df <data.frame> <tibble> rows <character> <symbol> specifying rows count cols <character> <symbol> specifying columns count","code":""},{"path":"https://andrewallenbruce.github.io/fuimus/reference/count_wide.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Count rows and columns and pivot to wide format ‚Äî count_wide","text":"","code":"fuimus:::forager_data(10) |>   count_wide(     c(ins_class),     payer) #> # A tibble: 2 √ó 7 #>   ins_class Anthem  BCBS Centene Cigna Medicaid UnitedHealth #>   <chr>      <int> <int>   <int> <int>    <int>        <int> #> 1 Primary        1     1       2     1        1            1 #> 2 Secondary      1     1       1     0        0            0"},{"path":"https://andrewallenbruce.github.io/fuimus/reference/delister.html","id":null,"dir":"Reference","previous_headings":"","what":"Wrapper for unlist(), with use.names set to FALSE ‚Äî delister","title":"Wrapper for unlist(), with use.names set to FALSE ‚Äî delister","text":"Wrapper unlist(), use.names set FALSE","code":""},{"path":"https://andrewallenbruce.github.io/fuimus/reference/delister.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Wrapper for unlist(), with use.names set to FALSE ‚Äî delister","text":"","code":"delister(x)"},{"path":"https://andrewallenbruce.github.io/fuimus/reference/delister.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Wrapper for unlist(), with use.names set to FALSE ‚Äî delister","text":"x named <list>","code":""},{"path":"https://andrewallenbruce.github.io/fuimus/reference/delister.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Wrapper for unlist(), with use.names set to FALSE ‚Äî delister","text":"unnamed <chr> vector","code":""},{"path":"https://andrewallenbruce.github.io/fuimus/reference/delister.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Wrapper for unlist(), with use.names set to FALSE ‚Äî delister","text":"","code":"delister(list(x = \"XYZ\")) #> [1] \"XYZ\""},{"path":"https://andrewallenbruce.github.io/fuimus/reference/density.html","id":null,"dir":"Reference","previous_headings":"","what":"Density plot ‚Äî density","title":"Density plot ‚Äî density","text":"Density plot","code":""},{"path":"https://andrewallenbruce.github.io/fuimus/reference/density.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Density plot ‚Äî density","text":"","code":"density(df, var, color, facets, binwidth = 0.1)"},{"path":"https://andrewallenbruce.github.io/fuimus/reference/density.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Density plot ‚Äî density","text":"df df var var color color var facets facets var binwidth binwidth","code":""},{"path":"https://andrewallenbruce.github.io/fuimus/reference/density.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Density plot ‚Äî density","text":"ggplot2 density plot","code":""},{"path":"https://andrewallenbruce.github.io/fuimus/reference/density.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Density plot ‚Äî density","text":"","code":"ggplot2::diamonds |> density(carat)   ggplot2::diamonds |> density(carat, cut)   ggplot2::diamonds |> density(carat, cut, clarity)"},{"path":"https://andrewallenbruce.github.io/fuimus/reference/df_2_chr.html","id":null,"dir":"Reference","previous_headings":"","what":"Coerce numeric columns to character ‚Äî df_2_chr","title":"Coerce numeric columns to character ‚Äî df_2_chr","text":"Coerce numeric columns character","code":""},{"path":"https://andrewallenbruce.github.io/fuimus/reference/df_2_chr.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Coerce numeric columns to character ‚Äî df_2_chr","text":"","code":"df_2_chr(df)"},{"path":"https://andrewallenbruce.github.io/fuimus/reference/df_2_chr.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Coerce numeric columns to character ‚Äî df_2_chr","text":"df <data.frame> <tibble>","code":""},{"path":"https://andrewallenbruce.github.io/fuimus/reference/df_2_chr.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Coerce numeric columns to character ‚Äî df_2_chr","text":"<data.frame> <tibble> numeric columns coerced character","code":""},{"path":"https://andrewallenbruce.github.io/fuimus/reference/df_2_chr.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Coerce numeric columns to character ‚Äî df_2_chr","text":"","code":"df_2_chr(dplyr::tibble(x = 20:35)) #> # A tibble: 16 √ó 1 #>    x     #>    <chr> #>  1 20    #>  2 21    #>  3 22    #>  4 23    #>  5 24    #>  6 25    #>  7 26    #>  8 27    #>  9 28    #> 10 29    #> 11 30    #> 12 31    #> 13 32    #> 14 33    #> 15 34    #> 16 35"},{"path":"https://andrewallenbruce.github.io/fuimus/reference/display_long.html","id":null,"dir":"Reference","previous_headings":"","what":"Pivot data frame to long format for easy printing ‚Äî display_long","title":"Pivot data frame to long format for easy printing ‚Äî display_long","text":"Pivot data frame long format easy printing","code":""},{"path":"https://andrewallenbruce.github.io/fuimus/reference/display_long.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Pivot data frame to long format for easy printing ‚Äî display_long","text":"","code":"display_long(df, cols = dplyr::everything())"},{"path":"https://andrewallenbruce.github.io/fuimus/reference/display_long.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Pivot data frame to long format for easy printing ‚Äî display_long","text":"df <data.frame> <tibble> pivot long cols <character> vector columns pivot long, default dplyr::everything()","code":""},{"path":"https://andrewallenbruce.github.io/fuimus/reference/display_long.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Pivot data frame to long format for easy printing ‚Äî display_long","text":"<data.frame> <tibble> long format","code":""},{"path":"https://andrewallenbruce.github.io/fuimus/reference/display_long.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Pivot data frame to long format for easy printing ‚Äî display_long","text":"","code":"x <- dplyr::tibble(      a = 1:10,      b = letters[1:10],      c = 11:20,      d = LETTERS[1:10],      e = 21:30)  display_long(x) #> # A tibble: 50 √ó 2 #>    name  value #>    <chr> <chr> #>  1 a     1     #>  2 b     a     #>  3 c     11    #>  4 d     A     #>  5 e     21    #>  6 a     2     #>  7 b     b     #>  8 c     12    #>  9 d     B     #> 10 e     22    #> # ‚Ñπ 40 more rows"},{"path":"https://andrewallenbruce.github.io/fuimus/reference/duration_vec.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate the duration between two dates ‚Äî duration_vec","title":"Calculate the duration between two dates ‚Äî duration_vec","text":"Calculate duration two dates","code":""},{"path":"https://andrewallenbruce.github.io/fuimus/reference/duration_vec.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate the duration between two dates ‚Äî duration_vec","text":"","code":"duration_vec(from, to)"},{"path":"https://andrewallenbruce.github.io/fuimus/reference/duration_vec.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate the duration between two dates ‚Äî duration_vec","text":"<date> Start date <date> End date","code":""},{"path":"https://andrewallenbruce.github.io/fuimus/reference/duration_vec.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate the duration between two dates ‚Äî duration_vec","text":"<dbl> vector duration two dates","code":""},{"path":"https://andrewallenbruce.github.io/fuimus/reference/duration_vec.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate the duration between two dates ‚Äî duration_vec","text":"","code":"duration_vec(   from = lubridate::today() - 366,   to = lubridate::today()) #> [1] \"31622400s (~1 years)\""},{"path":"https://andrewallenbruce.github.io/fuimus/reference/fancy_ts.html","id":null,"dir":"Reference","previous_headings":"","what":"Plots a fancy time series ‚Äî fancy_ts","title":"Plots a fancy time series ‚Äî fancy_ts","text":"Plots fancy time series","code":""},{"path":"https://andrewallenbruce.github.io/fuimus/reference/fancy_ts.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plots a fancy time series ‚Äî fancy_ts","text":"","code":"fancy_ts(df, val, group)"},{"path":"https://andrewallenbruce.github.io/fuimus/reference/fancy_ts.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plots a fancy time series ‚Äî fancy_ts","text":"df data.frame val value var group group var","code":""},{"path":"https://andrewallenbruce.github.io/fuimus/reference/fancy_ts.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plots a fancy time series ‚Äî fancy_ts","text":"tibble summarized data","code":""},{"path":"https://andrewallenbruce.github.io/fuimus/reference/fancy_ts.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plots a fancy time series ‚Äî fancy_ts","text":"","code":"df <- dplyr::tibble( dist1 = sort(rnorm(50, 5, 2)), dist2 = sort(rnorm(50, 8, 3)), dist4 = sort(rnorm(50, 15, 1)), date = seq.Date( as.Date(\"2022-01-01\"), as.Date(\"2022-04-10\"), by = \"2 days\") ) |> tidyr::pivot_longer( cols = -date, names_to = \"dist_name\", values_to = \"value\")  df #> # A tibble: 150 √ó 3 #>    date       dist_name  value #>    <date>     <chr>      <dbl> #>  1 2022-01-01 dist1      1.57  #>  2 2022-01-01 dist2     -0.817 #>  3 2022-01-01 dist4     12.8   #>  4 2022-01-03 dist1      2.21  #>  5 2022-01-03 dist2      2.32  #>  6 2022-01-03 dist4     12.9   #>  7 2022-01-05 dist1      2.72  #>  8 2022-01-05 dist2      2.75  #>  9 2022-01-05 dist4     13.2   #> 10 2022-01-07 dist1      2.73  #> # ‚Ñπ 140 more rows  fancy_ts(df, value, dist_name) + gg_theme()"},{"path":"https://andrewallenbruce.github.io/fuimus/reference/geomean.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate Geometric Mean ‚Äî geomean","title":"Calculate Geometric Mean ‚Äî geomean","text":"Average rate_of_return()","code":""},{"path":"https://andrewallenbruce.github.io/fuimus/reference/geomean.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate Geometric Mean ‚Äî geomean","text":"","code":"geomean(x)"},{"path":"https://andrewallenbruce.github.io/fuimus/reference/geomean.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate Geometric Mean ‚Äî geomean","text":"x numeric vector","code":""},{"path":"https://andrewallenbruce.github.io/fuimus/reference/geomean.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate Geometric Mean ‚Äî geomean","text":"","code":"x <- fuimus:::provider_data(2020:2025)  x |> dplyr::group_by(group) |> rate_of_return(net_payment) #> # A tibble: 12 √ó 4 #>     year group net_payment net_payment_ror #>    <int> <chr>       <int>           <dbl> #>  1  2020 A           12649           1     #>  2  2021 A           10315           0.815 #>  3  2022 A           10491           1.02  #>  4  2023 A           11468           1.09  #>  5  2024 A           11035           0.962 #>  6  2025 A           11290           1.02  #>  7  2020 B           17364           1     #>  8  2021 B           11686           0.673 #>  9  2022 B           18815           1.61  #> 10  2023 B           19532           1.04  #> 11  2024 B           15066           0.771 #> 12  2025 B           17520           1.16   x |> dplyr::group_by(group) |> rate_of_return(net_payment) |> dplyr::summarise(gmean = geomean(net_payment_ror), .by = group) #> # A tibble: 2 √ó 2 #>   group gmean #>   <chr> <dbl> #> 1 A     0.981 #> 2 B     1.00"},{"path":"https://andrewallenbruce.github.io/fuimus/reference/get_pin.html","id":null,"dir":"Reference","previous_headings":"","what":"Get a pinned dataset from a pins board ‚Äî get_pin","title":"Get a pinned dataset from a pins board ‚Äî get_pin","text":"Get pinned dataset pins board","code":""},{"path":"https://andrewallenbruce.github.io/fuimus/reference/get_pin.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get a pinned dataset from a pins board ‚Äî get_pin","text":"","code":"get_pin(pin, ...)"},{"path":"https://andrewallenbruce.github.io/fuimus/reference/get_pin.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get a pinned dataset from a pins board ‚Äî get_pin","text":"pin <chr> string name pinned dataset ... additional arguments passed mount_board()","code":""},{"path":"https://andrewallenbruce.github.io/fuimus/reference/get_pin.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get a pinned dataset from a pins board ‚Äî get_pin","text":"<tibble> <data.frame>","code":""},{"path":"https://andrewallenbruce.github.io/fuimus/reference/gg_theme.html","id":null,"dir":"Reference","previous_headings":"","what":"ggplot2 theme ‚Äî gg_theme","title":"ggplot2 theme ‚Äî gg_theme","text":"ggplot2 theme","code":""},{"path":"https://andrewallenbruce.github.io/fuimus/reference/gg_theme.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"ggplot2 theme ‚Äî gg_theme","text":"","code":"gg_theme()"},{"path":"https://andrewallenbruce.github.io/fuimus/reference/gg_theme.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"ggplot2 theme ‚Äî gg_theme","text":"ggplot theme","code":""},{"path":"https://andrewallenbruce.github.io/fuimus/reference/gg_theme.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"ggplot2 theme ‚Äî gg_theme","text":"","code":"ggplot2::diamonds |> histogram(carat, 0.1) + gg_theme()"},{"path":"https://andrewallenbruce.github.io/fuimus/reference/gh_raw.html","id":null,"dir":"Reference","previous_headings":"","what":"Return GitHub raw url ‚Äî gh_raw","title":"Return GitHub raw url ‚Äî gh_raw","text":"Return GitHub raw url","code":""},{"path":"https://andrewallenbruce.github.io/fuimus/reference/gh_raw.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Return GitHub raw url ‚Äî gh_raw","text":"","code":"gh_raw(x)"},{"path":"https://andrewallenbruce.github.io/fuimus/reference/gh_raw.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Return GitHub raw url ‚Äî gh_raw","text":"x <chr> string","code":""},{"path":"https://andrewallenbruce.github.io/fuimus/reference/gh_raw.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Return GitHub raw url ‚Äî gh_raw","text":"<chr> GitHub raw url","code":""},{"path":"https://andrewallenbruce.github.io/fuimus/reference/gh_raw.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Return GitHub raw url ‚Äî gh_raw","text":"","code":"gh_raw(\"andrewbruce/example/main/inst/pins/\") #> [1] \"https://raw.githubusercontent.com/andrewbruce/example/main/inst/pins/\""},{"path":"https://andrewallenbruce.github.io/fuimus/reference/grapes-nin-grapes.html","id":null,"dir":"Reference","previous_headings":"","what":"Infix operator for not in statements ‚Äî %nin%","title":"Infix operator for not in statements ‚Äî %nin%","text":"Infix operator statements","code":""},{"path":"https://andrewallenbruce.github.io/fuimus/reference/grapes-nin-grapes.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Infix operator for not in statements ‚Äî %nin%","text":"","code":"x %nin% table"},{"path":"https://andrewallenbruce.github.io/fuimus/reference/grapes-nin-grapes.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Infix operator for not in statements ‚Äî %nin%","text":"x vector table vector","code":""},{"path":"https://andrewallenbruce.github.io/fuimus/reference/grapes-nin-grapes.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Infix operator for not in statements ‚Äî %nin%","text":"logical vector","code":""},{"path":"https://andrewallenbruce.github.io/fuimus/reference/grapes-nn-grapes.html","id":null,"dir":"Reference","previous_headings":"","what":"Infix operator for if (!is.null(x)) y else x statements ‚Äî %nn%","title":"Infix operator for if (!is.null(x)) y else x statements ‚Äî %nn%","text":"Infix operator (!.null(x)) y else x statements","code":""},{"path":"https://andrewallenbruce.github.io/fuimus/reference/grapes-nn-grapes.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Infix operator for if (!is.null(x)) y else x statements ‚Äî %nn%","text":"","code":"x %nn% y"},{"path":"https://andrewallenbruce.github.io/fuimus/reference/grapes-nn-grapes.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Infix operator for if (!is.null(x)) y else x statements ‚Äî %nn%","text":"x, y vectors","code":""},{"path":"https://andrewallenbruce.github.io/fuimus/reference/grapes-nn-grapes.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Infix operator for if (!is.null(x)) y else x statements ‚Äî %nn%","text":"y x NULL, else x","code":""},{"path":"https://andrewallenbruce.github.io/fuimus/reference/grapes-nn-grapes.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Infix operator for if (!is.null(x)) y else x statements ‚Äî %nn%","text":"","code":"NULL %nn% 123456L #> NULL  \"abc\" %nn% 123456L #> [1] 123456"},{"path":"https://andrewallenbruce.github.io/fuimus/reference/gt_marks.html","id":null,"dir":"Reference","previous_headings":"","what":"gt Marks ‚Äî gt_marks","title":"gt Marks ‚Äî gt_marks","text":"gt Marks","code":""},{"path":"https://andrewallenbruce.github.io/fuimus/reference/gt_marks.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"gt Marks ‚Äî gt_marks","text":"","code":"gt_marks(gt_tbl, cols)"},{"path":"https://andrewallenbruce.github.io/fuimus/reference/gt_marks.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"gt Marks ‚Äî gt_marks","text":"gt_tbl <gt_tbl> object cols columns target","code":""},{"path":"https://andrewallenbruce.github.io/fuimus/reference/gt_marks.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"gt Marks ‚Äî gt_marks","text":"<gt_tbl> object marks","code":""},{"path":"https://andrewallenbruce.github.io/fuimus/reference/gt_marks.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"gt Marks ‚Äî gt_marks","text":"","code":"dplyr::tibble(pass = c(TRUE, FALSE, TRUE, FALSE)) |>   gt::gt() |>   gt_marks(cols = pass) #> <div id=\"ebiahsqzrd\" style=\"padding-left:0px;padding-right:0px;padding-top:10px;padding-bottom:10px;overflow-x:auto;overflow-y:auto;width:auto;height:auto;\"> #>   <style>#ebiahsqzrd table { #>   font-family: system-ui, 'Segoe UI', Roboto, Helvetica, Arial, sans-serif, 'Apple Color Emoji', 'Segoe UI Emoji', 'Segoe UI Symbol', 'Noto Color Emoji'; #>   -webkit-font-smoothing: antialiased; #>   -moz-osx-font-smoothing: grayscale; #> } #>  #> #ebiahsqzrd thead, #ebiahsqzrd tbody, #ebiahsqzrd tfoot, #ebiahsqzrd tr, #ebiahsqzrd td, #ebiahsqzrd th { #>   border-style: none; #> } #>  #> #ebiahsqzrd p { #>   margin: 0; #>   padding: 0; #> } #>  #> #ebiahsqzrd .gt_table { #>   display: table; #>   border-collapse: collapse; #>   line-height: normal; #>   margin-left: auto; #>   margin-right: auto; #>   color: #333333; #>   font-size: 16px; #>   font-weight: normal; #>   font-style: normal; #>   background-color: #FFFFFF; #>   width: auto; #>   border-top-style: solid; #>   border-top-width: 2px; #>   border-top-color: #A8A8A8; #>   border-right-style: none; #>   border-right-width: 2px; #>   border-right-color: #D3D3D3; #>   border-bottom-style: solid; #>   border-bottom-width: 2px; #>   border-bottom-color: #A8A8A8; #>   border-left-style: none; #>   border-left-width: 2px; #>   border-left-color: #D3D3D3; #> } #>  #> #ebiahsqzrd .gt_caption { #>   padding-top: 4px; #>   padding-bottom: 4px; #> } #>  #> #ebiahsqzrd .gt_title { #>   color: #333333; #>   font-size: 125%; #>   font-weight: initial; #>   padding-top: 4px; #>   padding-bottom: 4px; #>   padding-left: 5px; #>   padding-right: 5px; #>   border-bottom-color: #FFFFFF; #>   border-bottom-width: 0; #> } #>  #> #ebiahsqzrd .gt_subtitle { #>   color: #333333; #>   font-size: 85%; #>   font-weight: initial; #>   padding-top: 3px; #>   padding-bottom: 5px; #>   padding-left: 5px; #>   padding-right: 5px; #>   border-top-color: #FFFFFF; #>   border-top-width: 0; #> } #>  #> #ebiahsqzrd .gt_heading { #>   background-color: #FFFFFF; #>   text-align: center; #>   border-bottom-color: #FFFFFF; #>   border-left-style: none; #>   border-left-width: 1px; #>   border-left-color: #D3D3D3; #>   border-right-style: none; #>   border-right-width: 1px; #>   border-right-color: #D3D3D3; #> } #>  #> #ebiahsqzrd .gt_bottom_border { #>   border-bottom-style: solid; #>   border-bottom-width: 2px; #>   border-bottom-color: #D3D3D3; #> } #>  #> #ebiahsqzrd .gt_col_headings { #>   border-top-style: solid; #>   border-top-width: 2px; #>   border-top-color: #D3D3D3; #>   border-bottom-style: solid; #>   border-bottom-width: 2px; #>   border-bottom-color: #D3D3D3; #>   border-left-style: none; #>   border-left-width: 1px; #>   border-left-color: #D3D3D3; #>   border-right-style: none; #>   border-right-width: 1px; #>   border-right-color: #D3D3D3; #> } #>  #> #ebiahsqzrd .gt_col_heading { #>   color: #333333; #>   background-color: #FFFFFF; #>   font-size: 100%; #>   font-weight: normal; #>   text-transform: inherit; #>   border-left-style: none; #>   border-left-width: 1px; #>   border-left-color: #D3D3D3; #>   border-right-style: none; #>   border-right-width: 1px; #>   border-right-color: #D3D3D3; #>   vertical-align: bottom; #>   padding-top: 5px; #>   padding-bottom: 6px; #>   padding-left: 5px; #>   padding-right: 5px; #>   overflow-x: hidden; #> } #>  #> #ebiahsqzrd .gt_column_spanner_outer { #>   color: #333333; #>   background-color: #FFFFFF; #>   font-size: 100%; #>   font-weight: normal; #>   text-transform: inherit; #>   padding-top: 0; #>   padding-bottom: 0; #>   padding-left: 4px; #>   padding-right: 4px; #> } #>  #> #ebiahsqzrd .gt_column_spanner_outer:first-child { #>   padding-left: 0; #> } #>  #> #ebiahsqzrd .gt_column_spanner_outer:last-child { #>   padding-right: 0; #> } #>  #> #ebiahsqzrd .gt_column_spanner { #>   border-bottom-style: solid; #>   border-bottom-width: 2px; #>   border-bottom-color: #D3D3D3; #>   vertical-align: bottom; #>   padding-top: 5px; #>   padding-bottom: 5px; #>   overflow-x: hidden; #>   display: inline-block; #>   width: 100%; #> } #>  #> #ebiahsqzrd .gt_spanner_row { #>   border-bottom-style: hidden; #> } #>  #> #ebiahsqzrd .gt_group_heading { #>   padding-top: 8px; #>   padding-bottom: 8px; #>   padding-left: 5px; #>   padding-right: 5px; #>   color: #333333; #>   background-color: #FFFFFF; #>   font-size: 100%; #>   font-weight: initial; #>   text-transform: inherit; #>   border-top-style: solid; #>   border-top-width: 2px; #>   border-top-color: #D3D3D3; #>   border-bottom-style: solid; #>   border-bottom-width: 2px; #>   border-bottom-color: #D3D3D3; #>   border-left-style: none; #>   border-left-width: 1px; #>   border-left-color: #D3D3D3; #>   border-right-style: none; #>   border-right-width: 1px; #>   border-right-color: #D3D3D3; #>   vertical-align: middle; #>   text-align: left; #> } #>  #> #ebiahsqzrd .gt_empty_group_heading { #>   padding: 0.5px; #>   color: #333333; #>   background-color: #FFFFFF; #>   font-size: 100%; #>   font-weight: initial; #>   border-top-style: solid; #>   border-top-width: 2px; #>   border-top-color: #D3D3D3; #>   border-bottom-style: solid; #>   border-bottom-width: 2px; #>   border-bottom-color: #D3D3D3; #>   vertical-align: middle; #> } #>  #> #ebiahsqzrd .gt_from_md > :first-child { #>   margin-top: 0; #> } #>  #> #ebiahsqzrd .gt_from_md > :last-child { #>   margin-bottom: 0; #> } #>  #> #ebiahsqzrd .gt_row { #>   padding-top: 8px; #>   padding-bottom: 8px; #>   padding-left: 5px; #>   padding-right: 5px; #>   margin: 10px; #>   border-top-style: solid; #>   border-top-width: 1px; #>   border-top-color: #D3D3D3; #>   border-left-style: none; #>   border-left-width: 1px; #>   border-left-color: #D3D3D3; #>   border-right-style: none; #>   border-right-width: 1px; #>   border-right-color: #D3D3D3; #>   vertical-align: middle; #>   overflow-x: hidden; #> } #>  #> #ebiahsqzrd .gt_stub { #>   color: #333333; #>   background-color: #FFFFFF; #>   font-size: 100%; #>   font-weight: initial; #>   text-transform: inherit; #>   border-right-style: solid; #>   border-right-width: 2px; #>   border-right-color: #D3D3D3; #>   padding-left: 5px; #>   padding-right: 5px; #> } #>  #> #ebiahsqzrd .gt_stub_row_group { #>   color: #333333; #>   background-color: #FFFFFF; #>   font-size: 100%; #>   font-weight: initial; #>   text-transform: inherit; #>   border-right-style: solid; #>   border-right-width: 2px; #>   border-right-color: #D3D3D3; #>   padding-left: 5px; #>   padding-right: 5px; #>   vertical-align: top; #> } #>  #> #ebiahsqzrd .gt_row_group_first td { #>   border-top-width: 2px; #> } #>  #> #ebiahsqzrd .gt_row_group_first th { #>   border-top-width: 2px; #> } #>  #> #ebiahsqzrd .gt_summary_row { #>   color: #333333; #>   background-color: #FFFFFF; #>   text-transform: inherit; #>   padding-top: 8px; #>   padding-bottom: 8px; #>   padding-left: 5px; #>   padding-right: 5px; #> } #>  #> #ebiahsqzrd .gt_first_summary_row { #>   border-top-style: solid; #>   border-top-color: #D3D3D3; #> } #>  #> #ebiahsqzrd .gt_first_summary_row.thick { #>   border-top-width: 2px; #> } #>  #> #ebiahsqzrd .gt_last_summary_row { #>   padding-top: 8px; #>   padding-bottom: 8px; #>   padding-left: 5px; #>   padding-right: 5px; #>   border-bottom-style: solid; #>   border-bottom-width: 2px; #>   border-bottom-color: #D3D3D3; #> } #>  #> #ebiahsqzrd .gt_grand_summary_row { #>   color: #333333; #>   background-color: #FFFFFF; #>   text-transform: inherit; #>   padding-top: 8px; #>   padding-bottom: 8px; #>   padding-left: 5px; #>   padding-right: 5px; #> } #>  #> #ebiahsqzrd .gt_first_grand_summary_row { #>   padding-top: 8px; #>   padding-bottom: 8px; #>   padding-left: 5px; #>   padding-right: 5px; #>   border-top-style: double; #>   border-top-width: 6px; #>   border-top-color: #D3D3D3; #> } #>  #> #ebiahsqzrd .gt_last_grand_summary_row_top { #>   padding-top: 8px; #>   padding-bottom: 8px; #>   padding-left: 5px; #>   padding-right: 5px; #>   border-bottom-style: double; #>   border-bottom-width: 6px; #>   border-bottom-color: #D3D3D3; #> } #>  #> #ebiahsqzrd .gt_striped { #>   background-color: rgba(128, 128, 128, 0.05); #> } #>  #> #ebiahsqzrd .gt_table_body { #>   border-top-style: solid; #>   border-top-width: 2px; #>   border-top-color: #D3D3D3; #>   border-bottom-style: solid; #>   border-bottom-width: 2px; #>   border-bottom-color: #D3D3D3; #> } #>  #> #ebiahsqzrd .gt_footnotes { #>   color: #333333; #>   background-color: #FFFFFF; #>   border-bottom-style: none; #>   border-bottom-width: 2px; #>   border-bottom-color: #D3D3D3; #>   border-left-style: none; #>   border-left-width: 2px; #>   border-left-color: #D3D3D3; #>   border-right-style: none; #>   border-right-width: 2px; #>   border-right-color: #D3D3D3; #> } #>  #> #ebiahsqzrd .gt_footnote { #>   margin: 0px; #>   font-size: 90%; #>   padding-top: 4px; #>   padding-bottom: 4px; #>   padding-left: 5px; #>   padding-right: 5px; #> } #>  #> #ebiahsqzrd .gt_sourcenotes { #>   color: #333333; #>   background-color: #FFFFFF; #>   border-bottom-style: none; #>   border-bottom-width: 2px; #>   border-bottom-color: #D3D3D3; #>   border-left-style: none; #>   border-left-width: 2px; #>   border-left-color: #D3D3D3; #>   border-right-style: none; #>   border-right-width: 2px; #>   border-right-color: #D3D3D3; #> } #>  #> #ebiahsqzrd .gt_sourcenote { #>   font-size: 90%; #>   padding-top: 4px; #>   padding-bottom: 4px; #>   padding-left: 5px; #>   padding-right: 5px; #> } #>  #> #ebiahsqzrd .gt_left { #>   text-align: left; #> } #>  #> #ebiahsqzrd .gt_center { #>   text-align: center; #> } #>  #> #ebiahsqzrd .gt_right { #>   text-align: right; #>   font-variant-numeric: tabular-nums; #> } #>  #> #ebiahsqzrd .gt_font_normal { #>   font-weight: normal; #> } #>  #> #ebiahsqzrd .gt_font_bold { #>   font-weight: bold; #> } #>  #> #ebiahsqzrd .gt_font_italic { #>   font-style: italic; #> } #>  #> #ebiahsqzrd .gt_super { #>   font-size: 65%; #> } #>  #> #ebiahsqzrd .gt_footnote_marks { #>   font-size: 75%; #>   vertical-align: 0.4em; #>   position: initial; #> } #>  #> #ebiahsqzrd .gt_asterisk { #>   font-size: 100%; #>   vertical-align: 0; #> } #>  #> #ebiahsqzrd .gt_indent_1 { #>   text-indent: 5px; #> } #>  #> #ebiahsqzrd .gt_indent_2 { #>   text-indent: 10px; #> } #>  #> #ebiahsqzrd .gt_indent_3 { #>   text-indent: 15px; #> } #>  #> #ebiahsqzrd .gt_indent_4 { #>   text-indent: 20px; #> } #>  #> #ebiahsqzrd .gt_indent_5 { #>   text-indent: 25px; #> } #> <\/style> #>   <table class=\"gt_table\" data-quarto-disable-processing=\"false\" data-quarto-bootstrap=\"false\"> #>   <thead> #>     <tr class=\"gt_col_headings\"> #>       <th class=\"gt_col_heading gt_columns_bottom_border gt_center\" rowspan=\"1\" colspan=\"1\" scope=\"col\" id=\"pass\">pass<\/th> #>     <\/tr> #>   <\/thead> #>   <tbody class=\"gt_table_body\"> #>     <tr><td headers=\"pass\" class=\"gt_row gt_center\"><svg aria-hidden=\"true\" role=\"img\" viewBox=\"0 0 448 512\" style=\"height:1em;width:0.88em;vertical-align:-0.125em;margin-left:auto;margin-right:auto;font-size:inherit;fill:red;overflow:visible;position:relative;\"><path d=\"M438.6 105.4c12.5 12.5 12.5 32.8 0 45.3l-256 256c-12.5 12.5-32.8 12.5-45.3 0l-128-128c-12.5-12.5-12.5-32.8 0-45.3s32.8-12.5 45.3 0L160 338.7 393.4 105.4c12.5-12.5 32.8-12.5 45.3 0z\"/><\/svg><\/td><\/tr> #>     <tr><td headers=\"pass\" class=\"gt_row gt_center\"><svg aria-hidden=\"true\" role=\"img\" viewBox=\"0 0 384 512\" style=\"height:1em;width:0.75em;vertical-align:-0.125em;margin-left:auto;margin-right:auto;font-size:inherit;fill:grey40;overflow:visible;position:relative;\"><path d=\"M342.6 150.6c12.5-12.5 12.5-32.8 0-45.3s-32.8-12.5-45.3 0L192 210.7 86.6 105.4c-12.5-12.5-32.8-12.5-45.3 0s-12.5 32.8 0 45.3L146.7 256 41.4 361.4c-12.5 12.5-12.5 32.8 0 45.3s32.8 12.5 45.3 0L192 301.3 297.4 406.6c12.5 12.5 32.8 12.5 45.3 0s12.5-32.8 0-45.3L237.3 256 342.6 150.6z\"/><\/svg><\/td><\/tr> #>     <tr><td headers=\"pass\" class=\"gt_row gt_center\"><svg aria-hidden=\"true\" role=\"img\" viewBox=\"0 0 448 512\" style=\"height:1em;width:0.88em;vertical-align:-0.125em;margin-left:auto;margin-right:auto;font-size:inherit;fill:red;overflow:visible;position:relative;\"><path d=\"M438.6 105.4c12.5 12.5 12.5 32.8 0 45.3l-256 256c-12.5 12.5-32.8 12.5-45.3 0l-128-128c-12.5-12.5-12.5-32.8 0-45.3s32.8-12.5 45.3 0L160 338.7 393.4 105.4c12.5-12.5 32.8-12.5 45.3 0z\"/><\/svg><\/td><\/tr> #>     <tr><td headers=\"pass\" class=\"gt_row gt_center\"><svg aria-hidden=\"true\" role=\"img\" viewBox=\"0 0 384 512\" style=\"height:1em;width:0.75em;vertical-align:-0.125em;margin-left:auto;margin-right:auto;font-size:inherit;fill:grey40;overflow:visible;position:relative;\"><path d=\"M342.6 150.6c12.5-12.5 12.5-32.8 0-45.3s-32.8-12.5-45.3 0L192 210.7 86.6 105.4c-12.5-12.5-32.8-12.5-45.3 0s-12.5 32.8 0 45.3L146.7 256 41.4 361.4c-12.5 12.5-12.5 32.8 0 45.3s32.8 12.5 45.3 0L192 301.3 297.4 406.6c12.5 12.5 32.8 12.5 45.3 0s12.5-32.8 0-45.3L237.3 256 342.6 150.6z\"/><\/svg><\/td><\/tr> #>   <\/tbody> #>    #>    #> <\/table> #> <\/div>"},{"path":"https://andrewallenbruce.github.io/fuimus/reference/histogram.html","id":null,"dir":"Reference","previous_headings":"","what":"Histogram ‚Äî histogram","title":"Histogram ‚Äî histogram","text":"Histogram","code":""},{"path":"https://andrewallenbruce.github.io/fuimus/reference/histogram.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Histogram ‚Äî histogram","text":"","code":"histogram(df, var, binwidth)"},{"path":"https://andrewallenbruce.github.io/fuimus/reference/histogram.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Histogram ‚Äî histogram","text":"df data frame var var binwidth numeric binwidth","code":""},{"path":"https://andrewallenbruce.github.io/fuimus/reference/histogram.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Histogram ‚Äî histogram","text":"ggplot2 histogram","code":""},{"path":"https://andrewallenbruce.github.io/fuimus/reference/histogram.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Histogram ‚Äî histogram","text":"","code":"ggplot2::diamonds |>   histogram(carat, 0.1)"},{"path":"https://andrewallenbruce.github.io/fuimus/reference/invert_named.html","id":null,"dir":"Reference","previous_headings":"","what":"Invert a named vector ‚Äî invert_named","title":"Invert a named vector ‚Äî invert_named","text":"Invert named vector","code":""},{"path":"https://andrewallenbruce.github.io/fuimus/reference/invert_named.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Invert a named vector ‚Äî invert_named","text":"","code":"invert_named(x)"},{"path":"https://andrewallenbruce.github.io/fuimus/reference/invert_named.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Invert a named vector ‚Äî invert_named","text":"x named vector","code":""},{"path":"https://andrewallenbruce.github.io/fuimus/reference/invert_named.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Invert a named vector ‚Äî invert_named","text":"named vector names values inverted","code":""},{"path":"https://andrewallenbruce.github.io/fuimus/reference/invert_named.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Invert a named vector ‚Äî invert_named","text":"","code":"invert_named(x = c(name = \"element\")) #> element  #>  \"name\"   invert_named(x = c(element = \"name\")) #>      name  #> \"element\""},{"path":"https://andrewallenbruce.github.io/fuimus/reference/is_directory.html","id":null,"dir":"Reference","previous_headings":"","what":"Test if a path is a directory ‚Äî is_directory","title":"Test if a path is a directory ‚Äî is_directory","text":"Test path directory","code":""},{"path":"https://andrewallenbruce.github.io/fuimus/reference/is_directory.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Test if a path is a directory ‚Äî is_directory","text":"","code":"is_directory(x)"},{"path":"https://andrewallenbruce.github.io/fuimus/reference/is_directory.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Test if a path is a directory ‚Äî is_directory","text":"x <chr> directory path check","code":""},{"path":"https://andrewallenbruce.github.io/fuimus/reference/is_directory.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Test if a path is a directory ‚Äî is_directory","text":"named <lgl> vector, names give paths. given object exist, NA returned.","code":""},{"path":"https://andrewallenbruce.github.io/fuimus/reference/is_directory.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Test if a path is a directory ‚Äî is_directory","text":"","code":"is_directory(\"C:/\") #>   C:/  #> FALSE"},{"path":"https://andrewallenbruce.github.io/fuimus/reference/is_readable.html","id":null,"dir":"Reference","previous_headings":"","what":"Test if a path is readable ‚Äî is_readable","title":"Test if a path is readable ‚Äî is_readable","text":"Test path readable","code":""},{"path":"https://andrewallenbruce.github.io/fuimus/reference/is_readable.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Test if a path is readable ‚Äî is_readable","text":"","code":"is_readable(x)"},{"path":"https://andrewallenbruce.github.io/fuimus/reference/is_readable.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Test if a path is readable ‚Äî is_readable","text":"x <chr> vector one paths","code":""},{"path":"https://andrewallenbruce.github.io/fuimus/reference/is_readable.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Test if a path is readable ‚Äî is_readable","text":"<lgl> vector, names corresponding input path.","code":""},{"path":"https://andrewallenbruce.github.io/fuimus/reference/is_readable.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Test if a path is readable ‚Äî is_readable","text":"","code":"is_readable(\"D:/\") #>   D:/  #> FALSE"},{"path":"https://andrewallenbruce.github.io/fuimus/reference/list_pins.html","id":null,"dir":"Reference","previous_headings":"","what":"List pins from a pins board ‚Äî list_pins","title":"List pins from a pins board ‚Äî list_pins","text":"List pins pins board","code":""},{"path":"https://andrewallenbruce.github.io/fuimus/reference/list_pins.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"List pins from a pins board ‚Äî list_pins","text":"","code":"list_pins(...)"},{"path":"https://andrewallenbruce.github.io/fuimus/reference/list_pins.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"List pins from a pins board ‚Äî list_pins","text":"... arguments pass mount_board()","code":""},{"path":"https://andrewallenbruce.github.io/fuimus/reference/list_pins.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"List pins from a pins board ‚Äî list_pins","text":"<list> pins","code":""},{"path":"https://andrewallenbruce.github.io/fuimus/reference/make_interval.html","id":null,"dir":"Reference","previous_headings":"","what":"Create interval, period and time length columns from a start and end date ‚Äî make_interval","title":"Create interval, period and time length columns from a start and end date ‚Äî make_interval","text":"Create interval, period time length columns start end date","code":""},{"path":"https://andrewallenbruce.github.io/fuimus/reference/make_interval.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create interval, period and time length columns from a start and end date ‚Äî make_interval","text":"","code":"make_interval(df, start, end = lubridate::today())"},{"path":"https://andrewallenbruce.github.io/fuimus/reference/make_interval.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create interval, period and time length columns from a start and end date ‚Äî make_interval","text":"df <data.frame> <tibble> start <date> Start date column end <date> End date column","code":""},{"path":"https://andrewallenbruce.github.io/fuimus/reference/make_interval.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create interval, period and time length columns from a start and end date ‚Äî make_interval","text":"<data.frame> <tibble>","code":""},{"path":"https://andrewallenbruce.github.io/fuimus/reference/make_interval.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create interval, period and time length columns from a start and end date ‚Äî make_interval","text":"","code":"dplyr::tibble(date = lubridate::today() - 366) |>   make_interval(start = date) #> # A tibble: 1 √ó 4 #>   date       interval                       period            timelength_days #>   <date>     <Interval>                     <Period>                    <dbl> #> 1 2023-06-19 2023-06-19 UTC--2024-06-19 UTC 1y 0m 0d 0H 0M 0S             366"},{"path":"https://andrewallenbruce.github.io/fuimus/reference/mean_na.html","id":null,"dir":"Reference","previous_headings":"","what":"mean() with NA removal ‚Äî mean_na","title":"mean() with NA removal ‚Äî mean_na","text":"mean() NA removal","code":""},{"path":"https://andrewallenbruce.github.io/fuimus/reference/mean_na.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"mean() with NA removal ‚Äî mean_na","text":"","code":"mean_na(x)"},{"path":"https://andrewallenbruce.github.io/fuimus/reference/mean_na.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"mean() with NA removal ‚Äî mean_na","text":"x numeric vector","code":""},{"path":"https://andrewallenbruce.github.io/fuimus/reference/mean_na.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"mean() with NA removal ‚Äî mean_na","text":"","code":"mean_na(c(1, 2, NA)) #> [1] 1.5"},{"path":"https://andrewallenbruce.github.io/fuimus/reference/median_na.html","id":null,"dir":"Reference","previous_headings":"","what":"median() with NA removal ‚Äî median_na","title":"median() with NA removal ‚Äî median_na","text":"median() NA removal","code":""},{"path":"https://andrewallenbruce.github.io/fuimus/reference/median_na.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"median() with NA removal ‚Äî median_na","text":"","code":"median_na(x)"},{"path":"https://andrewallenbruce.github.io/fuimus/reference/median_na.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"median() with NA removal ‚Äî median_na","text":"x numeric vector","code":""},{"path":"https://andrewallenbruce.github.io/fuimus/reference/median_na.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"median() with NA removal ‚Äî median_na","text":"","code":"sd_na(c(1, 2, NA)) #> [1] 0.7071068"},{"path":"https://andrewallenbruce.github.io/fuimus/reference/months_regex.html","id":null,"dir":"Reference","previous_headings":"","what":"Regular expression for matching month names ‚Äî months_regex","title":"Regular expression for matching month names ‚Äî months_regex","text":"Regular expression matching month names","code":""},{"path":"https://andrewallenbruce.github.io/fuimus/reference/months_regex.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Regular expression for matching month names ‚Äî months_regex","text":"","code":"months_regex()"},{"path":"https://andrewallenbruce.github.io/fuimus/reference/months_regex.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Regular expression for matching month names ‚Äî months_regex","text":"<chr> string  regex matching month names","code":""},{"path":"https://andrewallenbruce.github.io/fuimus/reference/months_regex.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Regular expression for matching month names ‚Äî months_regex","text":"","code":"months_regex() #> [1] \"(Jan(?:uary)?|Feb(?:ruary)?|Mar(?:ch)?|Apr(?:il)?|May|Jun(?:e)?|Jul(?:y)?|Aug(?:ust)?|Sep(?:tember)?|Oct(?:ober)?|Nov(?:ember)?|Dec(?:ember)?)\\\\s+(\\\\d{1,2})\\\\,\\\\s+(\\\\d{4})\""},{"path":"https://andrewallenbruce.github.io/fuimus/reference/mount_board.html","id":null,"dir":"Reference","previous_headings":"","what":"Mount pins board ‚Äî mount_board","title":"Mount pins board ‚Äî mount_board","text":"Mount pins board","code":""},{"path":"https://andrewallenbruce.github.io/fuimus/reference/mount_board.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Mount pins board ‚Äî mount_board","text":"","code":"mount_board(source = c(\"local\", \"remote\"), package = \"fuimus\")"},{"path":"https://andrewallenbruce.github.io/fuimus/reference/mount_board.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Mount pins board ‚Äî mount_board","text":"source <chr> \"local\" \"remote\" package <chr> package name","code":""},{"path":"https://andrewallenbruce.github.io/fuimus/reference/mount_board.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Mount pins board ‚Äî mount_board","text":"<pins_board_folder> <pins_board_url>","code":""},{"path":"https://andrewallenbruce.github.io/fuimus/reference/na_if_common.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert various character strings to NA ‚Äî na_if_common","title":"Convert various character strings to NA ‚Äî na_if_common","text":"Convert various character strings NA","code":""},{"path":"https://andrewallenbruce.github.io/fuimus/reference/na_if_common.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert various character strings to NA ‚Äî na_if_common","text":"","code":"na_if_common(x)"},{"path":"https://andrewallenbruce.github.io/fuimus/reference/na_if_common.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert various character strings to NA ‚Äî na_if_common","text":"x <chr> vector convert","code":""},{"path":"https://andrewallenbruce.github.io/fuimus/reference/na_if_common.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert various character strings to NA ‚Äî na_if_common","text":"<chr> vector converted NA values","code":""},{"path":"https://andrewallenbruce.github.io/fuimus/reference/na_if_common.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convert various character strings to NA ‚Äî na_if_common","text":"","code":"na_if_common(x = c(\" \", \"*\", \"--\", \"N/A\", \"\", \"A\", \"B\")) #> [1] NA  NA  NA  NA  NA  \"A\" \"B\""},{"path":"https://andrewallenbruce.github.io/fuimus/reference/named_group_split.html","id":null,"dir":"Reference","previous_headings":"","what":"Split a tibble by Groups with Named List Output ‚Äî named_group_split","title":"Split a tibble by Groups with Named List Output ‚Äî named_group_split","text":"function takes table, groups one variables, splits grouped data list. resulting list names derived unique combinations grouping variables.","code":""},{"path":"https://andrewallenbruce.github.io/fuimus/reference/named_group_split.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Split a tibble by Groups with Named List Output ‚Äî named_group_split","text":"","code":"named_group_split(df, ...)"},{"path":"https://andrewallenbruce.github.io/fuimus/reference/named_group_split.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Split a tibble by Groups with Named List Output ‚Äî named_group_split","text":"df <tibble> <data.frame> split ... One unquoted variables group split df. Variables can separated commas.","code":""},{"path":"https://andrewallenbruce.github.io/fuimus/reference/named_group_split.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Split a tibble by Groups with Named List Output ‚Äî named_group_split","text":"named <list> tibbles, names derived unique combinations grouping variables, separated \"_\".","code":""},{"path":"https://andrewallenbruce.github.io/fuimus/reference/named_group_split.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Split a tibble by Groups with Named List Output ‚Äî named_group_split","text":"","code":"x <- dplyr::tibble(   zip = c(\"Data_Weekly.zip\",         \"Data_Weekly.zip\",         \"Data_April.zip\",         \"Deactivated.zip\"),   file = c(     \"npidata.csv\",     \"npidata2.csv\",     \"endpoint.csv\",     \"Deactivated.xlsx\"))  x #> # A tibble: 4 √ó 2 #>   zip             file             #>   <chr>           <chr>            #> 1 Data_Weekly.zip npidata.csv      #> 2 Data_Weekly.zip npidata2.csv     #> 3 Data_April.zip  endpoint.csv     #> 4 Deactivated.zip Deactivated.xlsx  named_group_split(x, zip) #> $Data_April.zip #> # A tibble: 1 √ó 2 #>   zip            file         #>   <chr>          <chr>        #> 1 Data_April.zip endpoint.csv #>  #> $Data_Weekly.zip #> # A tibble: 2 √ó 2 #>   zip             file         #>   <chr>           <chr>        #> 1 Data_Weekly.zip npidata.csv  #> 2 Data_Weekly.zip npidata2.csv #>  #> $Deactivated.zip #> # A tibble: 1 √ó 2 #>   zip             file             #>   <chr>           <chr>            #> 1 Deactivated.zip Deactivated.xlsx #>"},{"path":"https://andrewallenbruce.github.io/fuimus/reference/new_value.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate the new value from the old value and the percentage change between the two values ‚Äî new_value","title":"Calculate the new value from the old value and the percentage change between the two values ‚Äî new_value","text":"Calculate new value old value percentage change two values","code":""},{"path":"https://andrewallenbruce.github.io/fuimus/reference/new_value.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate the new value from the old value and the percentage change between the two values ‚Äî new_value","text":"","code":"new_value(old, percentage_change)"},{"path":"https://andrewallenbruce.github.io/fuimus/reference/new_value.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate the new value from the old value and the percentage change between the two values ‚Äî new_value","text":"old <dbl> older value percentage_change <dbl> percentage change","code":""},{"path":"https://andrewallenbruce.github.io/fuimus/reference/new_value.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate the new value from the old value and the percentage change between the two values ‚Äî new_value","text":"<dbl> vector new value","code":""},{"path":"https://andrewallenbruce.github.io/fuimus/reference/new_value.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate the new value from the old value and the percentage change between the two values ‚Äî new_value","text":"","code":"new_value(old = 942482, percentage_change = 0.007700943) #> [1] 949740  new_value(old = 1132783, percentage_change = -0.1679942) #> [1] 942482  # If the value of an object increased by 220%, # from the original value of # $500,000, what is it worth now?  new_value(old = 500000, percentage_change = 2.2) #> [1] 1600000"},{"path":"https://andrewallenbruce.github.io/fuimus/reference/null_if_empty.html","id":null,"dir":"Reference","previous_headings":"","what":"Return NULL if the input is empty, otherwise return the input ‚Äî null_if_empty","title":"Return NULL if the input is empty, otherwise return the input ‚Äî null_if_empty","text":"Return NULL input empty, otherwise return input","code":""},{"path":"https://andrewallenbruce.github.io/fuimus/reference/null_if_empty.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Return NULL if the input is empty, otherwise return the input ‚Äî null_if_empty","text":"","code":"null_if_empty(x)"},{"path":"https://andrewallenbruce.github.io/fuimus/reference/null_if_empty.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Return NULL if the input is empty, otherwise return the input ‚Äî null_if_empty","text":"x vector","code":""},{"path":"https://andrewallenbruce.github.io/fuimus/reference/null_if_empty.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Return NULL if the input is empty, otherwise return the input ‚Äî null_if_empty","text":"vector NULL","code":""},{"path":"https://andrewallenbruce.github.io/fuimus/reference/null_if_empty.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Return NULL if the input is empty, otherwise return the input ‚Äî null_if_empty","text":"","code":"null_if_empty(c()) #> NULL  null_if_empty(c(1)) #> [1] 1"},{"path":"https://andrewallenbruce.github.io/fuimus/reference/pad_number.html","id":null,"dir":"Reference","previous_headings":"","what":"Pad numbers with zeroes ‚Äî pad_number","title":"Pad numbers with zeroes ‚Äî pad_number","text":"Pad numbers zeroes","code":""},{"path":"https://andrewallenbruce.github.io/fuimus/reference/pad_number.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Pad numbers with zeroes ‚Äî pad_number","text":"","code":"pad_number(x, digits = NULL)"},{"path":"https://andrewallenbruce.github.io/fuimus/reference/pad_number.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Pad numbers with zeroes ‚Äî pad_number","text":"x <dbl> vector numbers digits <int> single integer; number zeroes pad x . left NULL (default), use result max(nchar(x))","code":""},{"path":"https://andrewallenbruce.github.io/fuimus/reference/pad_number.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Pad numbers with zeroes ‚Äî pad_number","text":"<chr> vector padded numbers","code":""},{"path":"https://andrewallenbruce.github.io/fuimus/reference/pad_number.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Pad numbers with zeroes ‚Äî pad_number","text":"","code":"pad_number(c(56, 2584, 010, 912, 12222)) #> [1] \"00056\" \"02584\" \"00010\" \"00912\" \"12222\"  pad_number(c(56, 2584, 010, 912, 00012222), digits = 10L) #> [1] \"0000000056\" \"0000002584\" \"0000000010\" \"0000000912\" \"0000012222\""},{"path":"https://andrewallenbruce.github.io/fuimus/reference/percentage_calculator.html","id":null,"dir":"Reference","previous_headings":"","what":"Percentage calculator ‚Äî percentage_calculator","title":"Percentage calculator ‚Äî percentage_calculator","text":"p% b, : p = /b = p * b b = /p","code":""},{"path":"https://andrewallenbruce.github.io/fuimus/reference/percentage_calculator.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Percentage calculator ‚Äî percentage_calculator","text":"","code":"percentage_calculator(a, b)"},{"path":"https://andrewallenbruce.github.io/fuimus/reference/percentage_calculator.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Percentage calculator ‚Äî percentage_calculator","text":", b <dbl> values","code":""},{"path":"https://andrewallenbruce.github.io/fuimus/reference/percentage_calculator.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Percentage calculator ‚Äî percentage_calculator","text":"<dbl> vector percentage difference","code":""},{"path":"https://andrewallenbruce.github.io/fuimus/reference/percentage_calculator.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Percentage calculator ‚Äî percentage_calculator","text":"Since absolute value taken change (difference) values, order numbers matter.","code":""},{"path":"https://andrewallenbruce.github.io/fuimus/reference/percentage_calculator.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Percentage calculator ‚Äî percentage_calculator","text":"","code":"percentage_calculator(2500, 133) #> $p #> [1] 18.79699 #>  #> $a #> [1] 2500 #>  #> $b #> [1] 133 #>   percentage_calculator(133, 2500) #> $p #> [1] 0.0532 #>  #> $a #> [1] 133 #>  #> $b #> [1] 2500 #>"},{"path":"https://andrewallenbruce.github.io/fuimus/reference/percentage_change.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate the percentage change between two values ‚Äî percentage_change","title":"Calculate the percentage change between two values ‚Äî percentage_change","text":"Percentage change obtained dividing change value original value.","code":""},{"path":"https://andrewallenbruce.github.io/fuimus/reference/percentage_change.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate the percentage change between two values ‚Äî percentage_change","text":"","code":"percentage_change(new, old)"},{"path":"https://andrewallenbruce.github.io/fuimus/reference/percentage_change.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate the percentage change between two values ‚Äî percentage_change","text":"new <dbl> newer value old <dbl> older value","code":""},{"path":"https://andrewallenbruce.github.io/fuimus/reference/percentage_change.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate the percentage change between two values ‚Äî percentage_change","text":"<dbl> vector percentage change","code":""},{"path":"https://andrewallenbruce.github.io/fuimus/reference/percentage_change.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Calculate the percentage change between two values ‚Äî percentage_change","text":"result positive, increase. result negative, decrease.","code":""},{"path":"https://andrewallenbruce.github.io/fuimus/reference/percentage_change.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate the percentage change between two values ‚Äî percentage_change","text":"","code":"percentage_change(new = 949740, old = 942482) #> [1] 0.007700943  percentage_change(new = 942482, old = 1132783) #> [1] -0.1679942"},{"path":"https://andrewallenbruce.github.io/fuimus/reference/percentage_difference.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate the percentage difference between two values ‚Äî percentage_difference","title":"Calculate the percentage difference between two values ‚Äî percentage_difference","text":"Percentage difference obtained dividing absolute value change average values multiplying 100.","code":""},{"path":"https://andrewallenbruce.github.io/fuimus/reference/percentage_difference.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate the percentage difference between two values ‚Äî percentage_difference","text":"","code":"percentage_difference(x, y)"},{"path":"https://andrewallenbruce.github.io/fuimus/reference/percentage_difference.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate the percentage difference between two values ‚Äî percentage_difference","text":"x, y <dbl> values determine percent difference , order matter","code":""},{"path":"https://andrewallenbruce.github.io/fuimus/reference/percentage_difference.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate the percentage difference between two values ‚Äî percentage_difference","text":"<dbl> vector percentage difference","code":""},{"path":"https://andrewallenbruce.github.io/fuimus/reference/percentage_difference.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Calculate the percentage difference between two values ‚Äî percentage_difference","text":"Since absolute value taken change (difference) values, order numbers matter.","code":""},{"path":"https://andrewallenbruce.github.io/fuimus/reference/percentage_difference.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate the percentage difference between two values ‚Äî percentage_difference","text":"","code":"percentage_difference(949740, 942482) #> [1] 0.007671404  percentage_difference(942482, 1132783) #> [1] 0.1833992"},{"path":"https://andrewallenbruce.github.io/fuimus/reference/rate_of_return.html","id":null,"dir":"Reference","previous_headings":"","what":"Lagged rate of return ‚Äî rate_of_return","title":"Lagged rate of return ‚Äî rate_of_return","text":"Lagged rate return","code":""},{"path":"https://andrewallenbruce.github.io/fuimus/reference/rate_of_return.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Lagged rate of return ‚Äî rate_of_return","text":"","code":"rate_of_return(df, col, n = 1, fill_na = 1L)"},{"path":"https://andrewallenbruce.github.io/fuimus/reference/rate_of_return.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Lagged rate of return ‚Äî rate_of_return","text":"df data frame col numeric column n <int> values offset fill_na <int> fill value NAs; default 1","code":""},{"path":"https://andrewallenbruce.github.io/fuimus/reference/rate_of_return.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Lagged rate of return ‚Äî rate_of_return","text":"","code":"fuimus:::provider_data(2020:2025) |>   dplyr::group_by(group) |>   rate_of_return(net_payment) #> # A tibble: 12 √ó 4 #>     year group net_payment net_payment_ror #>    <int> <chr>       <int>           <dbl> #>  1  2020 A           17769           1     #>  2  2021 A           15724           0.885 #>  3  2022 A           17505           1.11  #>  4  2023 A           15142           0.865 #>  5  2024 A           17495           1.16  #>  6  2025 A           13168           0.753 #>  7  2020 B           14417           1     #>  8  2021 B           10259           0.712 #>  9  2022 B           12976           1.26  #> 10  2023 B           10634           0.820 #> 11  2024 B           15850           1.49  #> 12  2025 B           18109           1.14"},{"path":"https://andrewallenbruce.github.io/fuimus/reference/remove_quiet.html","id":null,"dir":"Reference","previous_headings":"","what":"Remove empty rows and columns ‚Äî remove_quiet","title":"Remove empty rows and columns ‚Äî remove_quiet","text":"Remove empty rows columns","code":""},{"path":"https://andrewallenbruce.github.io/fuimus/reference/remove_quiet.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Remove empty rows and columns ‚Äî remove_quiet","text":"","code":"remove_quiet(df, ...)"},{"path":"https://andrewallenbruce.github.io/fuimus/reference/remove_quiet.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Remove empty rows and columns ‚Äî remove_quiet","text":"df data frame ... additional arguments pass janitor::remove_empty()","code":""},{"path":"https://andrewallenbruce.github.io/fuimus/reference/remove_quiet.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Remove empty rows and columns ‚Äî remove_quiet","text":"","code":"x <- dplyr::tibble(   x = c(1, 2, NA),   y = c(NA, NA, NA))  x #> # A tibble: 3 √ó 2 #>       x y     #>   <dbl> <lgl> #> 1     1 NA    #> 2     2 NA    #> 3    NA NA     remove_quiet(x) #> # A tibble: 2 √ó 1 #>       x #>   <dbl> #> 1     1 #> 2     2"},{"path":"https://andrewallenbruce.github.io/fuimus/reference/rename_seq.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate a sequence of numbers with a new prefix ‚Äî rename_seq","title":"Generate a sequence of numbers with a new prefix ‚Äî rename_seq","text":"Generate sequence numbers new prefix","code":""},{"path":"https://andrewallenbruce.github.io/fuimus/reference/rename_seq.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate a sequence of numbers with a new prefix ‚Äî rename_seq","text":"","code":"rename_seq(   n,   new,   between = \" = \",   old,   collapse = \", \",   enclose = NULL,   style = TRUE )"},{"path":"https://andrewallenbruce.github.io/fuimus/reference/rename_seq.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate a sequence of numbers with a new prefix ‚Äî rename_seq","text":"n <int> Numeric sequence generate new <chr> New prefix <chr> Separator new old, default \" = \" old <chr> Old prefix collapse <chr> Separator sequences, default \", \" enclose <chr> (optional) Vector length(x) == 2 enclose output style <lgl> Apply styler::style_text() output, default TRUE","code":""},{"path":"https://andrewallenbruce.github.io/fuimus/reference/rename_seq.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate a sequence of numbers with a new prefix ‚Äî rename_seq","text":"<chr> collapsed vector n sequences","code":""},{"path":"https://andrewallenbruce.github.io/fuimus/reference/rename_seq.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generate a sequence of numbers with a new prefix ‚Äî rename_seq","text":"","code":"rename_seq( n        = 10, new      = \"id_issuer_\", between  = \" = \", old      = \"Other.ID.Issuer.\", enclose  = c(\"x = c(\", \")\"), collapse = \",\\n \", style    = TRUE) #> x <- c( #>   id_issuer_1 = Other.ID.Issuer.1, #>   id_issuer_2 = Other.ID.Issuer.2, #>   id_issuer_3 = Other.ID.Issuer.3, #>   id_issuer_4 = Other.ID.Issuer.4, #>   id_issuer_5 = Other.ID.Issuer.5, #>   id_issuer_6 = Other.ID.Issuer.6, #>   id_issuer_7 = Other.ID.Issuer.7, #>   id_issuer_8 = Other.ID.Issuer.8, #>   id_issuer_9 = Other.ID.Issuer.9, #>   id_issuer_10 = Other.ID.Issuer.10 #> )"},{"path":"https://andrewallenbruce.github.io/fuimus/reference/roundup.html","id":null,"dir":"Reference","previous_headings":"","what":"Round a numeric vector up to the nearest decimal place ‚Äî roundup","title":"Round a numeric vector up to the nearest decimal place ‚Äî roundup","text":"Wrapper around janitor::round_half_up()","code":""},{"path":"https://andrewallenbruce.github.io/fuimus/reference/roundup.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Round a numeric vector up to the nearest decimal place ‚Äî roundup","text":"","code":"roundup(x, digits = 2)"},{"path":"https://andrewallenbruce.github.io/fuimus/reference/roundup.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Round a numeric vector up to the nearest decimal place ‚Äî roundup","text":"x <dbl> numeric vector digits <int> Number decimal places round ","code":""},{"path":"https://andrewallenbruce.github.io/fuimus/reference/roundup.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Round a numeric vector up to the nearest decimal place ‚Äî roundup","text":"numeric vector rounded nearest decimal place","code":""},{"path":"https://andrewallenbruce.github.io/fuimus/reference/sd_na.html","id":null,"dir":"Reference","previous_headings":"","what":"sd() with NA removal ‚Äî sd_na","title":"sd() with NA removal ‚Äî sd_na","text":"sd() NA removal","code":""},{"path":"https://andrewallenbruce.github.io/fuimus/reference/sd_na.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"sd() with NA removal ‚Äî sd_na","text":"","code":"sd_na(x)"},{"path":"https://andrewallenbruce.github.io/fuimus/reference/sd_na.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"sd() with NA removal ‚Äî sd_na","text":"x numeric vector","code":""},{"path":"https://andrewallenbruce.github.io/fuimus/reference/sd_na.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"sd() with NA removal ‚Äî sd_na","text":"","code":"sd_na(c(1, 2, NA)) #> [1] 0.7071068"},{"path":"https://andrewallenbruce.github.io/fuimus/reference/search_in.html","id":null,"dir":"Reference","previous_headings":"","what":"Search in data frame ‚Äî search_in","title":"Search in data frame ‚Äî search_in","text":"Search data frame","code":""},{"path":"https://andrewallenbruce.github.io/fuimus/reference/search_in.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Search in data frame ‚Äî search_in","text":"","code":"search_in(df, dfcol, search)"},{"path":"https://andrewallenbruce.github.io/fuimus/reference/search_in.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Search in data frame ‚Äî search_in","text":"df <data.frame> <tibble> dfcol <character> <symbol> specifying column search search <character> <symbol> specifying search term","code":""},{"path":"https://andrewallenbruce.github.io/fuimus/reference/search_in.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Search in data frame ‚Äî search_in","text":"<data.frame> <tibble>","code":""},{"path":"https://andrewallenbruce.github.io/fuimus/reference/search_in.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Search in data frame ‚Äî search_in","text":"","code":"x <- dplyr::tibble(y = 1:10,                    z = letters[1:10])  search_in(df = x,           dfcol = x$z,           search = c(\"a\", \"j\")) #> # A tibble: 2 √ó 2 #>       y z     #>   <int> <chr> #> 1     1 a     #> 2    10 j"},{"path":"https://andrewallenbruce.github.io/fuimus/reference/search_in_if.html","id":null,"dir":"Reference","previous_headings":"","what":"Search in data frame column if search term is not NULL ‚Äî search_in_if","title":"Search in data frame column if search term is not NULL ‚Äî search_in_if","text":"Search data frame column search term NULL","code":""},{"path":"https://andrewallenbruce.github.io/fuimus/reference/search_in_if.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Search in data frame column if search term is not NULL ‚Äî search_in_if","text":"","code":"search_in_if(df, dfcol, search)"},{"path":"https://andrewallenbruce.github.io/fuimus/reference/search_in_if.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Search in data frame column if search term is not NULL ‚Äî search_in_if","text":"df <data.frame> <tibble> dfcol <character> <symbol> specifying column search search <character> <symbol> specifying search term","code":""},{"path":"https://andrewallenbruce.github.io/fuimus/reference/search_in_if.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Search in data frame column if search term is not NULL ‚Äî search_in_if","text":"<data.frame> <tibble>","code":""},{"path":"https://andrewallenbruce.github.io/fuimus/reference/search_in_if.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Search in data frame column if search term is not NULL ‚Äî search_in_if","text":"","code":"x <- dplyr::tibble(      y = 1:10,      z = letters[1:10])  search_in_if(df = x,              dfcol = x$z,              search = c(\"a\", \"j\")) #> # A tibble: 2 √ó 2 #>       y z     #>   <int> <chr> #> 1     1 a     #> 2    10 j      search_in_if(df = x,              dfcol = x$z,              search = NULL) #> # A tibble: 10 √ó 2 #>        y z     #>    <int> <chr> #>  1     1 a     #>  2     2 b     #>  3     3 c     #>  4     4 d     #>  5     5 e     #>  6     6 f     #>  7     7 g     #>  8     8 h     #>  9     9 i     #> 10    10 j"},{"path":"https://andrewallenbruce.github.io/fuimus/reference/search_in_if_args.html","id":null,"dir":"Reference","previous_headings":"","what":"Search in data frame column if search term is not NULL ‚Äî search_in_if_args","title":"Search in data frame column if search term is not NULL ‚Äî search_in_if_args","text":"Search data frame column search term NULL","code":""},{"path":"https://andrewallenbruce.github.io/fuimus/reference/search_in_if_args.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Search in data frame column if search term is not NULL ‚Äî search_in_if_args","text":"","code":"search_in_if_args(df, dfcol, search, args = NULL, multiple = FALSE)"},{"path":"https://andrewallenbruce.github.io/fuimus/reference/search_in_if_args.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Search in data frame column if search term is not NULL ‚Äî search_in_if_args","text":"df <data.frame> <tibble> dfcol <character> <symbol> specifying column search search <character> <symbol> specifying search term args <character> vector argument options; default NULL multiple <logical> indicating multiple search args allowed; default FALSE","code":""},{"path":"https://andrewallenbruce.github.io/fuimus/reference/search_in_if_args.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Search in data frame column if search term is not NULL ‚Äî search_in_if_args","text":"<data.frame> <tibble>","code":""},{"path":"https://andrewallenbruce.github.io/fuimus/reference/search_in_if_args.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Search in data frame column if search term is not NULL ‚Äî search_in_if_args","text":"","code":"x <- dplyr::tibble(y = 1:10, z = letters[1:10])  search_in_if_args(df = x, dfcol = x$z, search = c(\"a\", \"j\")) #> # A tibble: 2 √ó 2 #>       y z     #>   <int> <chr> #> 1     1 a     #> 2    10 j      search_in_if_args(df = x, dfcol = x$z, search = NULL) #> # A tibble: 10 √ó 2 #>        y z     #>    <int> <chr> #>  1     1 a     #>  2     2 b     #>  3     3 c     #>  4     4 d     #>  5     5 e     #>  6     6 f     #>  7     7 g     #>  8     8 h     #>  9     9 i     #> 10    10 j      search_in_if_args(df = x,                   dfcol = x$z,                   search = c(\"a\", \"j\"),                   args = c(\"a\", \"j\"),                   multiple = TRUE) #> # A tibble: 2 √ó 2 #>       y z     #>   <int> <chr> #> 1     1 a     #> 2    10 j      try(search_in_if_args(df = x,                       dfcol = x$z,                       search = c(\"a\", \"j\"),                       args = c(\"a\", \"z\"),                       multiple = FALSE)) #> Error in search_in_if_args(df = x, dfcol = x$z, search = c(\"a\", \"j\"),  :  #>   `search` must be one of \"a\" or \"z\", not \"a\"."},{"path":"https://andrewallenbruce.github.io/fuimus/reference/show_missing.html","id":null,"dir":"Reference","previous_headings":"","what":"Show missing values ‚Äî show_missing","title":"Show missing values ‚Äî show_missing","text":"Show missing values","code":""},{"path":"https://andrewallenbruce.github.io/fuimus/reference/show_missing.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Show missing values ‚Äî show_missing","text":"","code":"show_missing(df, group_vars, summary_vars = dplyr::everything())"},{"path":"https://andrewallenbruce.github.io/fuimus/reference/show_missing.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Show missing values ‚Äî show_missing","text":"df <data.frame> <tibble> group_vars <character> <symbol> vector variables group summary_vars <character> <symbol> vector variables summarize; default dplyr::everything()","code":""},{"path":"https://andrewallenbruce.github.io/fuimus/reference/show_missing.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Show missing values ‚Äî show_missing","text":"","code":"dplyr::tibble(x = 1:10,               y = 1:10,               z = c(letters[1:10])) |>               show_missing(z) #> # A tibble: 10 √ó 1 #>    z     #>    <chr> #>  1 a     #>  2 b     #>  3 c     #>  4 d     #>  5 e     #>  6 f     #>  7 g     #>  8 h     #>  9 i     #> 10 j"},{"path":"https://andrewallenbruce.github.io/fuimus/reference/single_line_string.html","id":null,"dir":"Reference","previous_headings":"","what":"Format multiple line character vector to single line ‚Äî single_line_string","title":"Format multiple line character vector to single line ‚Äî single_line_string","text":"Format multiple line character vector single line","code":""},{"path":"https://andrewallenbruce.github.io/fuimus/reference/single_line_string.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Format multiple line character vector to single line ‚Äî single_line_string","text":"","code":"single_line_string(x)"},{"path":"https://andrewallenbruce.github.io/fuimus/reference/single_line_string.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Format multiple line character vector to single line ‚Äî single_line_string","text":"x <chr> character vector line breaks (\\n)","code":""},{"path":"https://andrewallenbruce.github.io/fuimus/reference/single_line_string.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Format multiple line character vector to single line ‚Äî single_line_string","text":"<chr> single line character vector","code":""},{"path":"https://andrewallenbruce.github.io/fuimus/reference/single_line_string.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Format multiple line character vector to single line ‚Äî single_line_string","text":"","code":"single_line_string( \"(Jan(?:uary)?|Feb(?:ruary)?|Mar(?:ch)?| Apr(?:il)?|May|Jun(?:e)?|Jul(?:y)?|\") #> [1] \"(Jan(?:uary)?|Feb(?:ruary)?|Mar(?:ch)?|Apr(?:il)?|May|Jun(?:e)?|Jul(?:y)?|\""},{"path":"https://andrewallenbruce.github.io/fuimus/reference/sorted_bars.html","id":null,"dir":"Reference","previous_headings":"","what":"Sorted Bar Chart ‚Äî sorted_bars","title":"Sorted Bar Chart ‚Äî sorted_bars","text":"Sorted Bar Chart","code":""},{"path":"https://andrewallenbruce.github.io/fuimus/reference/sorted_bars.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Sorted Bar Chart ‚Äî sorted_bars","text":"","code":"sorted_bars(df, var)"},{"path":"https://andrewallenbruce.github.io/fuimus/reference/sorted_bars.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Sorted Bar Chart ‚Äî sorted_bars","text":"df data frame var column plot","code":""},{"path":"https://andrewallenbruce.github.io/fuimus/reference/sorted_bars.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Sorted Bar Chart ‚Äî sorted_bars","text":"ggplot2 object","code":""},{"path":"https://andrewallenbruce.github.io/fuimus/reference/sorted_bars.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Sorted Bar Chart ‚Äî sorted_bars","text":"","code":"ggplot2::diamonds |>   sorted_bars(cut) +   gg_theme()"},{"path":"https://andrewallenbruce.github.io/fuimus/reference/splitter.html","id":null,"dir":"Reference","previous_headings":"","what":"Wrapper for strsplit() that unlists and unnames results ‚Äî splitter","title":"Wrapper for strsplit() that unlists and unnames results ‚Äî splitter","text":"Wrapper strsplit() unlists unnames results","code":""},{"path":"https://andrewallenbruce.github.io/fuimus/reference/splitter.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Wrapper for strsplit() that unlists and unnames results ‚Äî splitter","text":"","code":"splitter(x)"},{"path":"https://andrewallenbruce.github.io/fuimus/reference/splitter.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Wrapper for strsplit() that unlists and unnames results ‚Äî splitter","text":"x <chr> string named <list> <chr> strings","code":""},{"path":"https://andrewallenbruce.github.io/fuimus/reference/splitter.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Wrapper for strsplit() that unlists and unnames results ‚Äî splitter","text":"unnamed <list> split <chr> vectors","code":""},{"path":"https://andrewallenbruce.github.io/fuimus/reference/splitter.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Wrapper for strsplit() that unlists and unnames results ‚Äî splitter","text":"","code":"# unnamed vector splitter(\"XYZ\") #> [1] \"X\" \"Y\" \"Z\"  # named vector splitter(c(x = \"XYZ\")) #> [1] \"X\" \"Y\" \"Z\"  # unnamed list with one element splitter(list(\"XYZ\")) #> [1] \"X\" \"Y\" \"Z\"  # unnamed list with multiple elements splitter(list(\"YYY\", \"ZZZ\")) #> [[1]] #> [1] \"Y\" \"Y\" \"Y\" #>  #> [[2]] #> [1] \"Z\" \"Z\" \"Z\" #>   # named list with one element splitter(list(x = \"XYZ\")) #> [1] \"X\" \"Y\" \"Z\"  # named list with multiple elements splitter(list(x = \"YYY\", xx = \"ZZZ\")) #> [[1]] #> [1] \"Y\" \"Y\" \"Y\" #>  #> [[2]] #> [1] \"Z\" \"Z\" \"Z\" #>"},{"path":"https://andrewallenbruce.github.io/fuimus/reference/srchcol.html","id":null,"dir":"Reference","previous_headings":"","what":"Search a data frame column by string ‚Äî srchcol","title":"Search a data frame column by string ‚Äî srchcol","text":"Search data frame column string","code":""},{"path":"https://andrewallenbruce.github.io/fuimus/reference/srchcol.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Search a data frame column by string ‚Äî srchcol","text":"","code":"srchcol(df, col, search, ignore = TRUE, ...)"},{"path":"https://andrewallenbruce.github.io/fuimus/reference/srchcol.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Search a data frame column by string ‚Äî srchcol","text":"df <data.frame> <tibble> col column name string unquoted search string search , can regular expression, e.g. '^[-Z]' ignore ignore case, default TRUE ... additional arguments","code":""},{"path":"https://andrewallenbruce.github.io/fuimus/reference/srchcol.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Search a data frame column by string ‚Äî srchcol","text":"<data.frame> <tibble>","code":""},{"path":"https://andrewallenbruce.github.io/fuimus/reference/srchcol.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Search a data frame column by string ‚Äî srchcol","text":"","code":"x <- dplyr::tibble(y = 1:10, z = letters[1:10])  srchcol(df = x, col = \"z\", search = \"[a|j]\") #> # A tibble: 2 √ó 2 #>       y z     #>   <int> <chr> #> 1     1 a     #> 2    10 j"},{"path":"https://andrewallenbruce.github.io/fuimus/reference/sum_na.html","id":null,"dir":"Reference","previous_headings":"","what":"sum() with NA removal ‚Äî sum_na","title":"sum() with NA removal ‚Äî sum_na","text":"sum() NA removal","code":""},{"path":"https://andrewallenbruce.github.io/fuimus/reference/sum_na.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"sum() with NA removal ‚Äî sum_na","text":"","code":"sum_na(x)"},{"path":"https://andrewallenbruce.github.io/fuimus/reference/sum_na.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"sum() with NA removal ‚Äî sum_na","text":"x numeric vector","code":""},{"path":"https://andrewallenbruce.github.io/fuimus/reference/sum_na.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"sum() with NA removal ‚Äî sum_na","text":"","code":"sum_na(c(1, 2, NA)) #> [1] 3"},{"path":"https://andrewallenbruce.github.io/fuimus/reference/years_df.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate the number of years between two dates ‚Äî years_df","title":"Calculate the number of years between two dates ‚Äî years_df","text":"Calculate number years two dates","code":""},{"path":"https://andrewallenbruce.github.io/fuimus/reference/years_df.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate the number of years between two dates ‚Äî years_df","text":"","code":"years_df(df, from, to)"},{"path":"https://andrewallenbruce.github.io/fuimus/reference/years_df.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate the number of years between two dates ‚Äî years_df","text":"df <data.frame> <tibble> <date> Start date column <date> End date column","code":""},{"path":"https://andrewallenbruce.github.io/fuimus/reference/years_df.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate the number of years between two dates ‚Äî years_df","text":"<data.frame> <tibble>","code":""},{"path":"https://andrewallenbruce.github.io/fuimus/reference/years_df.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate the number of years between two dates ‚Äî years_df","text":"","code":"dplyr::tibble(   from = as.Date(\"2020-01-01\"),   to = as.Date(\"2020-01-01\") + 2057) |>   years_df(from, to) #> # A tibble: 1 √ó 3 #>   from       to         years_passed #>   <date>     <date>            <dbl> #> 1 2020-01-01 2025-08-19         5.63"},{"path":"https://andrewallenbruce.github.io/fuimus/reference/years_floor.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate the number of years between two dates rounded down to the nearest whole number ‚Äî years_floor","title":"Calculate the number of years between two dates rounded down to the nearest whole number ‚Äî years_floor","text":"Calculate number years two dates rounded nearest whole number","code":""},{"path":"https://andrewallenbruce.github.io/fuimus/reference/years_floor.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate the number of years between two dates rounded down to the nearest whole number ‚Äî years_floor","text":"","code":"years_floor(from, to)"},{"path":"https://andrewallenbruce.github.io/fuimus/reference/years_floor.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate the number of years between two dates rounded down to the nearest whole number ‚Äî years_floor","text":"<date> Start date <date> End date","code":""},{"path":"https://andrewallenbruce.github.io/fuimus/reference/years_floor.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate the number of years between two dates rounded down to the nearest whole number ‚Äî years_floor","text":"<dbl> vector number years two dates rounded nearest whole number","code":""},{"path":"https://andrewallenbruce.github.io/fuimus/reference/years_floor.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate the number of years between two dates rounded down to the nearest whole number ‚Äî years_floor","text":"","code":"years_floor(    from = as.Date(\"2020-01-01\"),    to = as.Date(\"2020-01-01\") + 2057) #> [1] 5"},{"path":"https://andrewallenbruce.github.io/fuimus/reference/years_vec.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate the number of years between two dates ‚Äî years_vec","title":"Calculate the number of years between two dates ‚Äî years_vec","text":"Calculate number years two dates","code":""},{"path":"https://andrewallenbruce.github.io/fuimus/reference/years_vec.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate the number of years between two dates ‚Äî years_vec","text":"","code":"years_vec(from, to)"},{"path":"https://andrewallenbruce.github.io/fuimus/reference/years_vec.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate the number of years between two dates ‚Äî years_vec","text":"<date> Start date <date> End date","code":""},{"path":"https://andrewallenbruce.github.io/fuimus/reference/years_vec.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate the number of years between two dates ‚Äî years_vec","text":"<dbl> vector number years two dates","code":""},{"path":"https://andrewallenbruce.github.io/fuimus/reference/years_vec.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate the number of years between two dates ‚Äî years_vec","text":"","code":"years_vec(   from = as.Date(\"2020-01-01\"),   to = as.Date(\"2020-01-01\") + 2057) #> [1] 5.63"},{"path":"https://andrewallenbruce.github.io/fuimus/news/index.html","id":"fuimus-001","dir":"Changelog","previous_headings":"","what":"fuimus 0.0.1","title":"fuimus 0.0.1","text":"Initial commit.","code":""}]
